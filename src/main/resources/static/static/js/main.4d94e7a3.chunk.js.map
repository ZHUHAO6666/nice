{"version":3,"sources":["webpack:///./src/style.less?bb42","style.less","redux/user.redux.js","redux/role.redux.js","redux/college.redux.js","reducer.js","config.js","component/login/login.js","container/login/index.js","container/test/index.js","component/menu/index.js","component/edit/userEdit.js","component/list/userlist.js","component/add/UserAdd.js","component/list/role.js","component/list/fun-form.js","component/list/fun.js","container/userManger/userManger.js","container/layout/Class.user.js","container/layout/Class.Teacher.js","container/from/targetaddfrom.js","container/from/targetaddfromfater.js","container/from/targetNode.js","container/layout/target.js","container/layout/paper.js","container/student/pjteacher/pjteacher.js","container/teacher/DataPager.js","container/layout/pjresult.js","container/teacher/pjmyself.js","container/teacher/pjyourself.js","container/main/index.js","container/layout/index.js","component/option/index.js","container/Pager/writePaper.js","container/Pager/TestpPager.js","App.js","index.js"],"names":["content","module","i","options","locals","exports","push","LOGIN_IN","ERROR_MSG","ADD_MENU","CLICK_MENU","ADD_SELECT","initstate","errormsg","msg","type","payload","addMenu","data","getMenu","username","dispatch","Axios","method","url","responseType","params","then","res","code","menu","ADD_ROLE","getrole","ADD_COLLEGE","getcollege","combineReducers","reducer","state","user","action","onmenu","select","role","college","axios","interceptors","request","use","config","response","LoginContainer","getFieldDecorator","this","props","form","className","onSubmit","Item","rules","required","message","onChange","onchanges","prefix","style","color","placeholder","htmlType","React","Component","LoginComponent","create","Login","connect","login","password","console","log","JSON","stringify","Storage","sessionStorage","setItem","alert","obj","adduser","mags","handlChange","e","setState","target","id","value","handlSubmit","bind","getItem","history","preventDefault","to","span","offset","Demo","height","year","population","forceFit","innerRadius","position","offsetY","offsetX","lineWidth","stroke","Menus","Gomenu","menuname","clickMenu","handlGetMenu","handlClick","path","filter","key","split","substring","toUpperCase","theme","defaultSelectedKeys","mode","map","onClick","img","name","FormItem","Option","UserEditCompent","handleOk","validateFields","err","values","userinfo","confirmLoading","visible","getRole","plainOptions","collegeList","undefined","v","roleList","main","labelCol","xs","sm","wrapperCol","handleSubmit","label","whitespace","initialValue","Group","width","handleSelectChange","optionFilterProp","showSearch","filterOption","input","option","children","toLowerCase","indexOf","valuePropName","title","onOk","onCancel","handleCancel","UserEdit","UserList","handlEdit","showModal","handleDelete","handleTableChange","pagination","filters","sorter","pager","current","fetch","pageSize","pageNum","loading","total","list","columns","dataIndex","render","record","onConfirm","rowKey","dataSource","Title","UserAddCompent","handlSelect","level","marginLeft","UserAdd","RoleC","showDrawer","onClose","roleinfo","AddLoading","success","error","getmenuall","getMock","targetKeys","mockData","item","description","chosen","inputValue","handleChange","handleSearch","dir","handleClick","hideOnSinglePage","colums","layout","hideRequiredMark","gutter","onSearch","titles","listStyle","left","bottom","borderTop","padding","background","textAlign","marginRight","Role","NormalLoginForm","WrappedNormalLoginForm","refs","getFormVlaue","ref","Fun","Useradmini","marginTop","CU","solter","classdata","val","marginBottom","onFocus","onBlur","CT","course","class","TargetAddFromCompent","remove","k","keys","getFieldValue","length","setFieldsValue","add","nextKeys","concat","indexName","weight","weghit","op","fraction","optionscore","pid","formItemLayout","formItemLayoutOnLabel","formItems","index","validateTrigger","min","max","TargetAddFrom","indexname","TargetAddFromFater","Paragraph","TargetNode","info","isshow","change","strong","defaultValue","TreeNode","TabPane","Index","withRouter","status","treeData","handledelete","thisindex","onDragEnter","warning","onloding","showData","handleonSelect","str","Object","assign","onChangeitem","listdata","defaultExpandedKeys","expandedKeys","onSelect","loop","defaultActiveKey","tab","size","spinning","float","bordered","editable","column","Search","Paper","confirm","handlopenbatch","batchopenindex","openbatch","handleDeletePager","batch","papers","questionall","handleSerach","extra","okText","cancelText","icon","pathname","date","text","Pjteacher","studentname","studentquestion","tname","tid","qname","qid","bid","Panel","DataPager","callback","allData","sales","cols","tickInterval","olddata","month","acc","oldcols","alias","fontSize","fontWeight","accordion","header","scale","crosshairs","tickLine","line","grid","shape","shadowColor","shadowBlur","shadowOffsetY","Pjresult","handlemapbatch","mapbatch","is","parseInt","ok","o","s","pjtj","handlesearch","ms","exa","pjtjexa","enterButton","a","b","Pjmyself","teachername","query","querytionexa","Pjyourself","number","Main","Header","Content","Sider","Footer","IndexLayout","collapsed","onCollapse","handlLogout","removeItem","block","minHeight","collapsible","placement","trigger","src","margin","radioStyle","display","lineHeight","problem","onchange","WritPager","handlesub","subdata","location","treekeys","checkedKeys","onCheck","resdata","subData","evals","zIndex","overflow","checkable","href","TestPager","okpro","click","subok","test","App","component","Game","store","createStore","reducers","compose","applyMiddleware","thunk","window","devToolsExtenion","f","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4d94e7a3.chunk.js","sourcesContent":["var content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ref--6-oneOf-7-2!./style.less\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".login-form {\\n  margin-top: 150px;\\n}\\n.login-form-forgot {\\n  float: right;\\n}\\n.login-form-button {\\n  width: 100%;\\n}\\n.login-titile {\\n  text-align: center;\\n}\\n.logo {\\n  height: 32px;\\n  background: rgba(255, 255, 255, 0.2);\\n  margin: 16px;\\n}\\n.userinfo {\\n  float: right;\\n  height: 100%;\\n  width: 100px;\\n  margin-right: 100px;\\n  cursor: pointer;\\n}\\n.userinfo:hover {\\n  background: #e6f7ff;\\n}\\n.userinfo .Avatar {\\n  margin-left: 5px;\\n}\\n.button-add {\\n  margin: 20px;\\n}\\n.logo {\\n  width: 120px;\\n  height: 31px;\\n  background: rgba(255, 255, 255, 0.2);\\n  margin: 16px 24px 16px 0;\\n  float: left;\\n}\\n\", \"\"]);\n\n","import Axios from \"axios\";\r\n\r\n/**\r\n * 处理用户有关的state树操作，登陆，注销\r\n */\r\n\r\n const LOGIN_IN='LOGIN_IN' //登陆\r\n//  const LOGIN_OUT='LOGIN_OUT' //注销\r\nconst ERROR_MSG='ERROR_MSG'//错误消息\r\nconst ADD_MENU='ADD_MENU'//添加菜单\r\nconst CLICK_MENU='CLICK_MENU'//点击菜单\r\nconst ADD_SELECT='ADD_SELECT'//搜索框内容\r\n// initstate\r\nconst initstate={\r\n}\r\n\r\n//rudecr\r\nexport function user (state = initstate,action){\r\n    switch(action.type){\r\n        case LOGIN_IN:\r\n            return {...state,...action.payload};\r\n        case ERROR_MSG:\r\n            return {...state,msg:action.payload};\r\n        case ADD_MENU:\r\n            return {...state,menu:action.payload};\r\n        case CLICK_MENU:\r\n            return {...state,onmenu:action.payload};\r\n        case ADD_SELECT:\r\n            return {...state,select:action.payload};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action\r\nfunction errormsg(msg){\r\n    return {type:ERROR_MSG,payload:msg}\r\n}\r\nfunction clickMenu(menuname){\r\n    return {type:CLICK_MENU,payload:menuname}\r\n}\r\nfunction adduser(obj){\r\n    const {code,...data}=obj;\r\n    return {type:LOGIN_IN,payload:data}\r\n}\r\n\r\nfunction addMenu(data){\r\n    return {type:ADD_MENU,payload:data}\r\n}\r\n\r\nexport function Gomenu(menuname){\r\n    return dispatch=>{\r\n        dispatch(clickMenu(menuname))\r\n    }\r\n}\r\nexport function addSelect(val){\r\n    return {type:ADD_SELECT,payload:val}\r\n}\r\n\r\nexport function getMenu(username){\r\n        return dispatch =>{\r\n            Axios({\r\n                method:'post',\r\n                url:'/getmenu',\r\n                responseType:'json',\r\n                params:{\r\n                    \"username\":username\r\n                }\r\n              })\r\n            .then(res =>{\r\n                if(res.data.code===1){\r\n                    dispatch(addMenu(res.data.menu))\r\n                }\r\n                \r\n            }\r\n            )\r\n        }\r\n}\r\nexport function getMenuAll(){\r\n    return dispatch =>{\r\n        Axios({\r\n            method:'post',\r\n            url:'/getmenuall',\r\n            responseType:'json',\r\n          })\r\n        .then(res =>{\r\n            if(res.data.code===1){\r\n                dispatch(addMenu(res.data.menu))\r\n            }\r\n            \r\n        }\r\n        )\r\n    }\r\n}\r\n\r\nexport function login(password,username){\r\n    if(!password||!username){\r\n        return errormsg('请输入账号和密码');\r\n    }\r\n    return  dispatch =>{\r\n        Axios({\r\n            method:'post',\r\n            url:'/login',\r\n            params:{\r\n                \"password\":password,\r\n                \"username\":username\r\n            }\r\n          })\r\n        .then(res => {\r\n            if(res.data.code===1){\r\n            const data=res.data\r\n            data.username=username\r\n            console.log('data'+JSON.stringify(res.data,null,2))\r\n            if(typeof(Storage) !==\"undefined\"){\r\n                sessionStorage.setItem(\"username\",username)\r\n            }else{\r\n                alert(\"您的游览器不支持Storage\")\r\n            }\r\n            dispatch(adduser(data))\r\n            //将用户名存入sessionStorge，表示已经登陆\r\n            \r\n            }else{\r\n             dispatch(errormsg(res.data.mags))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n","import Axios from \"axios\";\r\n\r\n/**\r\n * 处理用户有关的state树操作，登陆，注销\r\n */\r\n\r\nconst ADD_ROLE='ADD_ROLE'\r\n// initstate\r\nconst initstate={\r\n}\r\n\r\n//rudecr\r\nexport function role (state = initstate,action){\r\n    switch(action.type){\r\n        case ADD_ROLE:\r\n            return {...state,role:action.payload};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action\r\nfunction addrole(data){\r\n    return {type:ADD_ROLE,payload:data}\r\n}\r\nexport function getrole(){\r\n        return dispatch =>{\r\n            Axios({\r\n                method:'post',\r\n                url:'/getRole',\r\n                responseType:'json',\r\n              })\r\n            .then(res =>{\r\n                \r\n                dispatch(addrole(res.data))\r\n            }\r\n            )\r\n        }\r\n}\r\n\r\n","import Axios from \"axios\";\r\n\r\n/**\r\n * 处理用户有关的state树操作，登陆，注销\r\n */\r\n\r\nconst ADD_COLLEGE='ADD_COLELEGE'//添加学院\r\n// initstate\r\nconst initstate={\r\n    \r\n}\r\n\r\n//rudecr\r\nexport function college (state = initstate,action){\r\n    switch(action.type){\r\n        case ADD_COLLEGE:\r\n            return {...state,college:action.payload};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action\r\nfunction addcollege(data){\r\n    return {type:ADD_COLLEGE,payload:data}\r\n}\r\nexport function getcollege(){\r\n        return dispatch =>{\r\n            Axios({\r\n                method:'post',\r\n                url:'/getCollege',\r\n                responseType:'json',\r\n              })\r\n            .then(res =>{\r\n                dispatch(addcollege(res.data))\r\n            }\r\n            )\r\n        }\r\n}","import { combineReducers } from \"redux\"\r\nimport {user} from './redux/user.redux'\r\nimport {role} from './redux/role.redux'\r\nimport {college} from './redux/college.redux'\r\nfunction reducer(state=0,antion){\r\n    return state\r\n}\r\n\r\nexport default combineReducers({reducer,user,role,college})","import axios from 'axios';\r\naxios.interceptors.request.use(function(config){\r\n    return config\r\n})\r\naxios.interceptors.response.use(function(config){\r\n    return config\r\n})\r\n","import React from 'react';\r\nimport { Form, Icon, Input, Button } from 'antd'\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form  className=\"login-form\" onSubmit={this.props.onSubmit}>\r\n        <Form.Item>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n          })(\r\n            <Input\r\n              onChange={this.props.onchanges}\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder='用户名'\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Input\r\n              onChange={this.props.onchanges}\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder='密码'\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            登陆\r\n          </Button>         \r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginComponent = Form.create()(LoginContainer);\r\nexport default LoginComponent","import React from 'react';\r\nimport LoginComponent from '../../component/login/login'\r\nimport {Row,Col,Alert} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../../redux/user.redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n// @withRouter可让非路由组件在内部像路由组件一样直接使用this.props.history.push()\r\n@connect(\r\n    state => state.user,\r\n    {login}\r\n  )\r\nclass Login extends React.Component{\r\n\r\n    componentDidMount(){\r\n        if(sessionStorage.getItem('username')){\r\n            this.props.history.push('/index')\r\n        }    \r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n                username:'',\r\n                password:''\r\n        }\r\n        this.handlSubmit = this.handlSubmit.bind(this)\r\n    }\r\n    //处理用户输入\r\n    handlChange =(e)=>{\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })  \r\n    }\r\n    //登陆\r\n     handlSubmit(e){\r\n        this.props.login(this.state.password,this.state.username)\r\n        e.preventDefault()\r\n    }\r\n    render(){\r\n        return (\r\n            <div >\r\n                <Row>\r\n                {sessionStorage.getItem('username')?<Redirect to='/index'/>:\r\n                <Col span={6} offset={9} className=\"login-form\">\r\n                    <h1 className=\"login-titile\">教师评价系统</h1>\r\n                    <LoginComponent  onchanges={this.handlChange} onSubmit={this.handlSubmit}></LoginComponent>\r\n                    {this.props.msg?<Alert message={this.props.msg} type=\"error\" />:null}\r\n                </Col>}\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Login","import React from \"react\";\r\nimport {\r\n  G2,\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Coord,\r\n  Label,\r\n  Legend,\r\n  View,\r\n  Guide,\r\n  Shape,\r\n  Facet,\r\n  Util\r\n} from \"bizcharts\";\r\n\r\nclass Demo extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: \"A\",\r\n        population: 93\r\n      },\r\n      {\r\n        year: \"B\",\r\n        population: 73\r\n      },\r\n      {\r\n        year: \"C\",\r\n        population: 66\r\n      },\r\n      {\r\n        year: \"D\",\r\n        population:55\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <Chart height={600} data={data} forceFit>\r\n          <Coord type=\"polar\" innerRadius={0.2} />\r\n          <Tooltip />\r\n          <Legend\r\n            position=\"right\"\r\n            offsetY={-600 / 2 + 180}\r\n            offsetX={-160}\r\n          />\r\n          <Geom\r\n            type=\"interval\"\r\n            color=\"year\"\r\n            position=\"year*population\"\r\n            style={{\r\n              lineWidth: 1,\r\n              stroke: \"#fff\"\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Demo\r\n","import React from 'react'\r\nimport {Icon,Menu} from 'antd'\r\nimport {connect} from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {getMenu,Gomenu} from '../../redux/user.redux'\r\n// @withRouter可让非路由组件在内部像路由组件一样直接使用this.props.history.push()\r\n@connect(\r\n  state => state.user,\r\n  {getMenu,Gomenu}\r\n)\r\nclass Menus extends React.Component{\r\n    \r\n    handlGetMenu=(props)=>{\r\n      this.props.getMenu(props)\r\n    }  \r\n    handlClick=(e)=>{\r\n      // 获取path\r\n      const res=this.props.menu.filter(menu=>{\r\n        // eslint-disable-next-line\r\n        return menu.id==e.key\r\n      })\r\n      const path=res[0].path\r\n      if(!path){\r\n        return\r\n      }\r\n      //处理path改为首字母大写，去除‘/’\r\n      const menuname= path.split(\"/\")[1].substring(0,1).toUpperCase()+path.split(\"/\")[1].substring(1)\r\n      //写入state树\r\n      this.props.Gomenu(menuname)\r\n    }\r\n    render(){\r\n      return (<Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\"> \r\n      {this.props.menu?\r\n        this.props.menu.map(menu=>\r\n          <Menu.Item key={menu.id} onClick={this.handlClick}>\r\n          <Icon type={menu.img} />\r\n          <span>{menu.name}</span>\r\n        </Menu.Item>\r\n        ):\r\n        sessionStorage.getItem('username')?this.handlGetMenu(sessionStorage.getItem('username')):\r\n        <Redirect to='/Login'/>\r\n        }\r\n      </Menu>)\r\n    }\r\n}\r\nexport default Menus\r\n ","import React from 'react'\r\nimport { Form, Input, Row, Col, Checkbox, Modal, Button, Select } from 'antd'\r\nimport { getrole } from '../../redux/role.redux'\r\nimport { getcollege } from '../../redux/college.redux'\r\nimport { connect } from 'react-redux'\r\nimport Axios from 'axios';\r\nconst FormItem = Form.Item;\r\nconst { Option } = Select\r\n\r\n@connect(state => state, { getrole, getcollege })\r\nclass UserEditCompent extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            confirmLoading: false,\r\n        };\r\n    }\r\n    //处理submit\r\n    handleOk = () => {\r\n        this.props.form.validateFields((err, values) => {\r\n            values.id=this.props.userinfo.id\r\n            console.log(JSON.stringify(values,null,2))\r\n            if (!err) {\r\n                this.setState({\r\n                    confirmLoading: true,\r\n                });\r\n                console.log(JSON.stringify(values, null, 2))\r\n                Axios({\r\n                    method: 'post',\r\n                    url: '/edituser',\r\n                    data: {\r\n                        ...values\r\n                    }\r\n                }\r\n                ).then(res => {\r\n                    if (res.code === 1) {\r\n                        this.setState({\r\n                            visible: false,\r\n                            confirmLoading: false,\r\n                        });\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    };\r\n    //检查数据是否存在\r\n    getRole = () => {\r\n        this.props.getrole()\r\n    }\r\n    getcollege = () => {\r\n        this.props.getcollege()\r\n    }\r\n    render() {\r\n        const userinfo=this.props.userinfo\r\n        const plainOptions = this.props.role.role ? this.props.role.role : this.getRole()\r\n        const college = this.props.college.college ? this.props.college.college : this.getcollege()\r\n        const props = college\r\n        const { getFieldDecorator } = this.props.form;\r\n        //布局\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n        let collegeList = {}\r\n        if (college !== undefined) {\r\n            collegeList = college.map(v =>\r\n                <Option key={v.id}>{v.name}</Option>\r\n            )\r\n        }\r\n        let roleList = <Col></Col>\r\n        if (plainOptions !== undefined) {\r\n            roleList = plainOptions.map(v => {\r\n                return <Checkbox key={v.id} value={v.id}>{v.name}</Checkbox>\r\n            }\r\n            )\r\n        }\r\n        const main = (\r\n            <div >\r\n                <Form {...formItemLayout} {...props} onSubmit={this.handleSubmit} onChange={this.handlChange}>\r\n                    <Form.Item\r\n                        label={\r\n                            <span>\r\n                                昵称&nbsp;\r\n              </span>\r\n                        }\r\n                    >\r\n                        {getFieldDecorator('username', {\r\n                            rules: [{ required: true, message: '请输入昵称', whitespace: true }],\r\n                            initialValue:userinfo.name\r\n                        })(<Input />)}\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label={\r\n                            <span>\r\n                                姓名&nbsp;\r\n                    </span>\r\n                        }\r\n                    >\r\n                        {getFieldDecorator('name', {\r\n                            rules: [{ required: true, message: '请输入姓名', whitespace: true }],\r\n                            initialValue:userinfo.username\r\n                        })(<Input />)}\r\n                    </Form.Item>\r\n                    <FormItem\r\n                        label='角色'>\r\n                        {\r\n                            getFieldDecorator('role', {\r\n                                rules: [{\r\n                                    required: true,\r\n                                    message: 'Please input your note!'\r\n                                }],\r\n                                // initialValue: userinfo.role.map(v=>v.id)\r\n                            })(<Checkbox.Group style={{ width: '100%' }}>\r\n                                {roleList}\r\n                            </Checkbox.Group>)\r\n                        }\r\n                    </FormItem>\r\n                    <Form.Item label=\"学院\">\r\n                        {getFieldDecorator('college', {\r\n                            rules: [{ required: true, message: 'Please select your gender!' }],\r\n                            initialValue:userinfo.college\r\n                        })(\r\n                            <Select\r\n                                placeholder=\"选择学院\"\r\n                                onChange={this.handleSelectChange}\r\n                                optionFilterProp=\"children\"\r\n                                showSearch\r\n                                filterOption={(input, option) =>\r\n                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                {collegeList}\r\n                            </Select>,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"密码\">\r\n                            {getFieldDecorator('reset', {\r\n                                valuePropName: 'checked',\r\n                            })(\r\n                                <Checkbox>\r\n                                重置密码\r\n                                </Checkbox>,\r\n                            )}\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>)\r\n        return (\r\n            <div>             \r\n                <Modal\r\n                    title=\"修改用户\"\r\n                    visible={this.props.visible}\r\n                    onOk={this.handleOk}\r\n                    confirmLoading={this.state.confirmLoading}\r\n                    onCancel={this.props.handleCancel}\r\n                >\r\n                    {main}\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst UserEdit = Form.create(\r\n)(UserEditCompent)\r\nexport default UserEdit","import { Table, Popconfirm, Divider } from 'antd';\r\nimport React from 'react';\r\nimport Axios from 'axios';\r\nimport UserEdit from '../../component/edit/userEdit'\r\n\r\nclass UserList extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: [],\r\n      userinfo:{},\r\n      pagination: {},\r\n      loading: false,\r\n      visible: false,\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: '昵称',\r\n        dataIndex: 'username',\r\n        width: '20%',\r\n      },\r\n      {\r\n        title: '真实名',\r\n        dataIndex: 'name',\r\n        width: '20%',\r\n      },\r\n      {\r\n        title: '院系',\r\n        dataIndex: 'college',\r\n        width: '20%',\r\n      },\r\n      {\r\n        title: '角色',\r\n        dataIndex: 'role',\r\n        width: '20%',\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'option',\r\n        render: (record) => (<div>\r\n          <Popconfirm title=\"确定删除吗?\" onConfirm={() => this.handleDelete(record.id)}>\r\n            <a>Delete</a>\r\n          </Popconfirm>\r\n          <Divider type=\"vertical\" />\r\n          <a onClick={() => this.handlEdit(record.id)}>Edit</a>\r\n        </div>\r\n        )\r\n        ,\r\n        width: '20%',\r\n      },\r\n    ];\r\n  }\r\n  handlEdit = (id) => {\r\n    this.showModal()\r\n    console.log(this.state.data+\"----\"+id)\r\n    const userinfo=this.state.data.filter(v=>\r\n      v.id===id\r\n      )\r\n      this.setState({\r\n        userinfo:userinfo[0]\r\n      })\r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  handleDelete = (key) => {\r\n    console.log(key)\r\n  }\r\n  componentDidMount() {\r\n    this.fetch();\r\n  }\r\n   //发送信息\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    // alert('begin')\r\n    const pager = { ...this.state.pagination };\r\n    pager.current = pagination.current;\r\n    this.setState({\r\n      pagination: pager,\r\n    });\r\n    this.fetch({\r\n      pageSize: pagination.pageSize,\r\n      pageNum: pagination.current,\r\n    });\r\n  };\r\n\r\n  fetch = (params = { \"pageSize\": 5, \"pageNum\": 1 }) => {\r\n    // console.log(params)\r\n    this.setState({ loading: true });\r\n    Axios({\r\n      url: '/getuserall',\r\n      method: 'get',\r\n      params: {\r\n        // results: 10,\r\n        ...params,\r\n      },\r\n      type: 'json',\r\n    }).then(res => {\r\n      const pagination = { ...this.state.pagination };\r\n      // Read total count from server\r\n      // pagination.total = data.totalCount;\r\n      pagination.total = res.data.total;\r\n      // console.log(JSON.stringify(res.data.list,null,2))\r\n      this.setState({\r\n        loading: false,\r\n        data: res.data.list,\r\n        pagination,\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Table\r\n          columns={this.columns}\r\n          rowKey={record => record.id}\r\n          dataSource={this.state.data}\r\n          pagination={this.state.pagination}\r\n          loading={this.state.loading}\r\n          onChange={this.handleTableChange}\r\n        />\r\n        <UserEdit visible={this.state.visible} handleCancel={this.handleCancel} userinfo={this.state.userinfo}></UserEdit>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default UserList","import React from 'react'\r\nimport { Form, Input,Row,Col,Checkbox, Modal, Button,Select,Typography} from 'antd'\r\nimport { getrole } from '../../redux/role.redux'\r\nimport {getcollege}from '../../redux/college.redux'\r\nimport { connect } from 'react-redux'\r\nimport Axios from 'axios';\r\nconst FormItem = Form.Item;\r\nconst {Option}=Select\r\nconst { Title } = Typography;\r\n\r\n@connect(state => state, { getrole,getcollege})\r\nclass UserAddCompent extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      visible: false,\r\n      confirmLoading: false,\r\n    };\r\n\r\n  }\r\n  //显示model\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  //处理submit\r\n  handleOk = () => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.setState({\r\n          confirmLoading: true,\r\n        });\r\n        console.log(JSON.stringify(values,null,2))\r\n        Axios({\r\n          method:'post',\r\n          url:'/adduser',\r\n          data:{\r\n            ...values\r\n          }\r\n          }\r\n        ).then(res=>{\r\n          if(res.code===1){\r\n            this.setState({\r\n              \r\n              visible: false,\r\n              confirmLoading: false,\r\n            });\r\n          }\r\n         \r\n        })\r\n      }\r\n      \r\n    });\r\n    \r\n  };\r\n  // 关闭显示\r\n  handleCancel = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  //检查数据是否存在\r\n  getRole = () => {\r\n    this.props.getrole()\r\n  }\r\n  handlSelect=()=>{\r\n    // this.props\r\n  }\r\n  getcollege=()=>{\r\n    this.props.getcollege()\r\n  }\r\n  render() {\r\n    const plainOptions=this.props.role.role?this.props.role.role:this.getRole()\r\n    const college = this.props.college.college?this.props.college.college:this.getcollege()\r\n    const props=college\r\n    const { getFieldDecorator } = this.props.form;\r\n    //布局\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 6 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    let collegeList={}\r\n    if(college !==undefined){\r\n      collegeList=college.map(v=>\r\n        <Option key={v.id}>{v.name}</Option>\r\n      )\r\n    }\r\n    let roleList=<Col></Col>\r\n    if(plainOptions !==undefined){\r\n      roleList=plainOptions.map(v=>{\r\n        return <Checkbox key={v.id} value={v.id}>{v.name}</Checkbox>\r\n        }\r\n      )\r\n    }\r\n    const main = (\r\n      <div >\r\n        <Form {...formItemLayout} {...props}  onSubmit={this.handleSubmit} onChange={this.handlChange}>\r\n          <Form.Item\r\n            label={\r\n              <span>\r\n                昵称&nbsp;\r\n              </span>\r\n            }\r\n          >\r\n            {getFieldDecorator('username', {\r\n              rules: [{ required: true, message: '请输入昵称', whitespace: true }],\r\n            })(<Input />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={\r\n              <span>\r\n                姓名&nbsp;\r\n                    </span>\r\n            }\r\n          >\r\n            {getFieldDecorator('name', {\r\n              rules: [{ required: true, message: '请输入姓名', whitespace: true }],\r\n            })(<Input />)}\r\n          </Form.Item>\r\n          <FormItem\r\n            label='角色'>\r\n            {\r\n              getFieldDecorator('role', {\r\n                rules: [{\r\n                  required: true,\r\n                  message: 'Please input your note!'\r\n                }],\r\n                initialValue: [],\r\n              })(<Checkbox.Group style={{ width: '100%' }}>\r\n              \r\n                {roleList}\r\n              \r\n            </Checkbox.Group>)\r\n            }\r\n          </FormItem>\r\n          <Form.Item label=\"学院\">\r\n          {getFieldDecorator('college', {\r\n            rules: [{ required: true, message: 'Please select your gender!' }],\r\n          })(\r\n            <Select\r\n              placeholder=\"选择学院\"\r\n              onChange={this.handleSelectChange}\r\n              optionFilterProp=\"children\"\r\n              showSearch\r\n              filterOption={(input, option) =>\r\n                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {collegeList}\r\n            </Select>,\r\n          )}\r\n         </Form.Item>\r\n        </Form>\r\n      </div>)\r\n    return (\r\n      <Row>\r\n        <Col span={20}>\r\n        <Title level={2}>用户管理</Title>\r\n        </Col>\r\n        <Col span={4}>\r\n           <Button style={{marginLeft:80}} type=\"primary\"  onClick={this.showModal} className=\"button-add\">添加用户</Button>\r\n       </Col>\r\n        <Modal\r\n          title=\"添加用户\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          confirmLoading={this.state.confirmLoading}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          {main}\r\n        </Modal>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\nconst UserAdd = Form.create(\r\n)(UserAddCompent)\r\nexport default UserAdd","import React from 'react'\r\nimport { Popconfirm, Divider,message, Table,Transfer, Row, Col,Select,Drawer,DatePicker,Icon, Typography, Button,Form,Input,Modal } from 'antd'\r\nimport Axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport {getMenu} from '../../redux/user.redux'\r\nconst { Title } = Typography;\r\nconst { Option } = Select\r\n// 数据结构\r\n\r\n@connect(state => state.user,{getMenu})\r\nclass RoleC extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          menu:[\r\n          ],\r\n          role:[],\r\n            roleinfo: {},\r\n            pagination: {\r\n            hideOnSinglePage: true\r\n            },\r\n            loading: false,\r\n            AddLoading:false,\r\n            visible: false,\r\n            mockData: [],\r\n            targetKeys: [],\r\n        }\r\n        // 表单结构\r\n        this.colums = [\r\n            {\r\n                title: '角色名',\r\n                dataIndex: 'name',\r\n                width: '20%',\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'option',\r\n                render: (record) => (<div>\r\n                    <Popconfirm title=\"确定删除吗?\" onConfirm={() => this.handleDelete(record.id)}>\r\n                        <a>删除</a>\r\n                    </Popconfirm>\r\n                    <Divider type=\"vertical\" />\r\n                    <a onClick={() => this.handlEdit(record.id)}>修改</a>\r\n                </div>\r\n                )\r\n                ,\r\n                width: '20%',\r\n            },\r\n        ]\r\n    }\r\n    showDrawer = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n    };\r\n  \r\n    onClose = () => {\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    };\r\n    handlEdit=(id)=>{\r\n      console.log(id)\r\n      const roleinfo = this.state.role.filter(v=>v.id===id)\r\n      this.setState({\r\n        roleinfo:roleinfo\r\n      })\r\n    }\r\n\r\n    handleOk = () => {\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            console.log(JSON.stringify(values,null,2))\r\n            this.setState({\r\n              AddLoading: true,\r\n            });\r\n            Axios({\r\n              method:'post',\r\n              url:'/addrole',\r\n              params:{\r\n                ...values\r\n              }\r\n              }\r\n            ).then(res=>{\r\n              if(res.code===1){\r\n                this.setState({\r\n                  visible: false,\r\n                  confirmLoading: false,\r\n                });\r\n                message.success(\"添加成功\")\r\n              }\r\n              message.error('添加失败')\r\n            })\r\n          }\r\n          \r\n        });\r\n      };\r\n    handleCancel = () => {\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n    componentDidMount() {\r\n     this.fetch()\r\n    }\r\n    handleTableChange = (pagination, filters, sorter) => {\r\n        // alert('begin')\r\n        const pager = { ...this.state.pagination };\r\n        pager.current = pagination.current;\r\n        this.setState({\r\n            pagination: pager,\r\n        });\r\n        this.fetch({\r\n            pageSize: pagination.pageSize,\r\n            pageNum: pagination.current,\r\n        });\r\n    };\r\n    fetch = () => {\r\n        this.setState({ loading: true });\r\n        Axios({\r\n            url: '/getRole',\r\n            method: 'get',\r\n            type: 'json',\r\n        }).then(res => {\r\n            this.setState({\r\n                loading: false,\r\n                role: res.data,\r\n            });\r\n        });\r\n\r\n        Axios({\r\n          url: '/getmenuall',\r\n          method: 'get',\r\n          type: 'json',\r\n      }).then(res => {\r\n          this.setState({\r\n              menu: res.data.getmenuall,\r\n          });\r\n          this.getMock();\r\n      });\r\n    };\r\n    getMock = () => {\r\n      const targetKeys = [];\r\n      const mockData = [];\r\n      if(this.props.menu==='undefined'){\r\n        // this.props.getMenu()\r\n        return\r\n      }\r\n      this.state.menu.map(item=>{\r\n        const is=false\r\n        const data = {\r\n          key:item.id,\r\n          title:item.name,\r\n          description: `菜单`,\r\n          chosen:is\r\n        };\r\n        if (data.chosen) {\r\n          targetKeys.push(data.key);\r\n        }\r\n        mockData.push(data);\r\n      })\r\n      this.setState({ mockData, targetKeys });\r\n    };\r\n  \r\n    filterOption = (inputValue, option) => option.description.indexOf(inputValue) > -1;\r\n  \r\n    handleChange = targetKeys => {\r\n      this.setState({ targetKeys });\r\n    };\r\n  \r\n    handleSearch = (dir, value) => {\r\n      console.log('search:', dir, value);\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.setState({\r\n            visible: true\r\n        })\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const main =<div>\r\n        <Drawer\r\n          title=\"新建角色\"\r\n          width={720}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"角色名\">\r\n                  {getFieldDecorator('rolename', {\r\n                    rules: [{ required: true, message: '请输入角色名' }],\r\n                    initialValue:this.state.roleinfo.name\r\n                  })(<Input placeholder=\"角色名\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"功能菜单\">\r\n                  {getFieldDecorator('menu', {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: '请添加菜单',\r\n                      },\r\n                    ],\r\n                  })(\r\n\r\n                    <Transfer                   \r\n                    dataSource={this.state.mockData}//数据\r\n                    showSearch//是否显示搜索框\r\n                    filterOption={this.filterOption}//判读搜索框\r\n                    targetKeys={this.state.targetKeys}//key值\r\n                    onChange={this.handleChange}\r\n                    onSearch={this.handleSearch}//搜索框内容改变时\r\n                    render={item => item.title}//单行渲染\r\n                    titles={['未添加菜单','已添加菜单']}\r\n                    listStyle={{\r\n                      width: 250,\r\n                      height: 300,\r\n                    }}\r\n                  />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              bottom: 0,\r\n              width: '100%',\r\n              borderTop: '1px solid #e9e9e9',\r\n              padding: '10px 16px',\r\n              background: '#fff',\r\n              textAlign: 'right',\r\n            }}\r\n          >\r\n            <Button onClick={this.onClose} style={{ marginRight: 8 }}>\r\n              取消\r\n            </Button>\r\n            <Button htmlType=\"submit\" loading={this.state.AddLoading} onClick={this.handleOk} type=\"primary\">\r\n              提交\r\n            </Button>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n        return <Row>\r\n                    <Col span={20}>\r\n                        <Title level={3}>角色管理</Title>\r\n                    </Col>\r\n                    <Button type=\"primary\" onClick={this.showDrawer}>\r\n                      <Icon type=\"plus\" /> 新建\r\n                    </Button>\r\n                    <Table\r\n                        columns={this.colums}\r\n                        rowKey={record => record.id}\r\n                        dataSource={this.state.role}\r\n                        pagination={this.state.pagination}\r\n                        loading={this.state.loading}\r\n                    //   onChange={this.handleTableChange}\r\n                    />\r\n                    {main}\r\n            </Row>\r\n            }\r\n    }\r\n    const Role = Form.create()(RoleC)\r\nexport default Role","import React, { Component } from 'react';\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\n \r\nconst FormItem = Form.Item;\r\n//form代码，没有什么改进，把下面的提交按钮去掉就行\r\nclass NormalLoginForm extends Component {\r\n \r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form className=\"login-form\">\r\n        <FormItem>\r\n          {getFieldDecorator('name', {\r\n            rules: [{ required: true, message: '请输入功能名' }],\r\n          })(\r\n            <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"功能名\" />\r\n          )}\r\n        </FormItem>\r\n        <FormItem>\r\n          {getFieldDecorator('img', {\r\n            rules: [{ required: true, message: '可以在antd官网查询图标' }],\r\n          })(\r\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"图标名\" />\r\n          )}\r\n        </FormItem>\r\n        <FormItem>\r\n          {getFieldDecorator('path', {\r\n            rules: [{ required: true, message: '请输入path' }],\r\n          })(\r\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"路径\" />\r\n          )}\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n \r\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\r\n \r\nexport default WrappedNormalLoginForm;","import React from 'react'\r\nimport { Popconfirm, Divider, Table, Transfer, Row, Col, Select, Drawer, DatePicker, Icon, Typography, Button, Form, Input, Modal, message } from 'antd'\r\nimport Axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport { getMenu } from '../../redux/user.redux'\r\nimport WrappedNormalLoginForm from './fun-form';\r\nconst { Title } = Typography;\r\nconst { Option } = Select\r\n// 数据结构\r\n\r\n@connect(state => state.user, { getMenu })\r\nclass RoleC extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: [],\r\n      visible: false\r\n    }\r\n    // 表单结构\r\n    this.colums = [\r\n      {\r\n        title: '功能名',\r\n        dataIndex: 'name',\r\n        width: '20%',\r\n      },\r\n      {\r\n        title: '图片',\r\n        dataIndex: 'img',\r\n        width: '20%',\r\n      },\r\n      {\r\n        title: '路径',\r\n        dataIndex: 'path',\r\n        width: '20%',\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'option',\r\n        render: (record) => (<div>\r\n          <Popconfirm title=\"确定删除吗?\" onConfirm={() => this.handleDelete(record.id)}>\r\n            <a>删除</a>\r\n          </Popconfirm>\r\n          <Divider type=\"vertical\" />\r\n          <a onClick={() => this.handlEdit(record.id)}>修改</a>\r\n        </div>\r\n        )\r\n        ,\r\n        width: '20%',\r\n      },\r\n    ]\r\n  }\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    let demo = this.refs.getFormVlaue;//通过refs属性可以获得对话框内form对象\r\n    demo.validateFields((err, values) => {\r\n      if (!err) {\r\n        Axios({\r\n          method: 'post',\r\n          url: '/addrole',\r\n          params: {\r\n            ...values\r\n          }\r\n        }\r\n        ).then(res => {\r\n          if (res.code === 1) {\r\n            this.setState({\r\n              visible: false,\r\n            });\r\n            message.success(\"添加成功\")\r\n          }\r\n          message.error('添加失败')\r\n\r\n        })\r\n      }\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    })\r\n    };\r\n\r\n\r\n\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n\r\n\r\n  handlEdit = (id) => {\r\n    console.log(id)\r\n    const roleinfo = this.state.role.filter(v => v.id === id)\r\n    this.setState({\r\n      roleinfo: roleinfo\r\n    })\r\n    console.log(JSON.stringify(this.state.roleinfo, null, 2))\r\n  }\r\n  componentDidMount() {\r\n    this.fetch();\r\n  }\r\n  fetch = () => {\r\n    this.setState({ loading: true });\r\n    Axios({\r\n      url: '/getmenuall',\r\n      method: 'get',\r\n      type: 'json',\r\n    }).then(res => {\r\n      this.setState({\r\n        loading: false,\r\n        data: res.data.getmenuall,\r\n      });\r\n      this.setState({ loading: false });\r\n    });\r\n  };\r\n  filterOption = (inputValue, option) => option.description.indexOf(inputValue) > -1;\r\n  render() {\r\n    return <Row>\r\n      <Col span={20}>\r\n        <Title level={3}>功能管理</Title>\r\n      </Col>\r\n      <Button type=\"primary\" onClick={this.showModal}>\r\n        <Icon type=\"plus\" /> 新建\r\n                    </Button>\r\n      <Table\r\n        columns={this.colums}\r\n        rowKey={record => record.id}\r\n        dataSource={this.state.data}\r\n      //   onChange={this.handleTableChange}\r\n      />\r\n      <Modal\r\n        title=\"添加功能\"\r\n        visible={this.state.visible}\r\n        onOk={this.handleOk}\r\n        onCancel={this.handleCancel}\r\n      >\r\n        <WrappedNormalLoginForm ref='getFormVlaue'></WrappedNormalLoginForm>\r\n      </Modal>\r\n    </Row>\r\n  }\r\n}\r\nconst Fun = Form.create()(RoleC)\r\nexport default Fun","import React from 'react';\r\nimport Userlist from '../../component/list/userlist'\r\nimport UserAdd from '../../component/add/UserAdd'\r\nimport Role from '../../component/list/role'\r\nimport Fun from '../../component/list/fun'\r\nimport { Row,Col } from 'antd'\r\n\r\nclass Useradmini extends React.Component {\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col style={{ padding: 24, background: '#fff',marginTop:32 }} span={24}>\r\n        <UserAdd></UserAdd>\r\n        <Userlist></Userlist>\r\n        </Col >\r\n        <Col style={{ padding: 24, background: '#fff',marginTop:32 }} span={24}>\r\n        <Role></Role>\r\n        </Col>\r\n        <Col style={{ padding: 24, background: '#fff',marginTop:32 }}  span={24}>\r\n        <Fun></Fun>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default Useradmini  ","import React from 'react';\r\nimport { Table ,Popconfirm,Divider,Row,Col,Typography,Button,Icon,Select} from 'antd';\r\nimport Axios from 'axios'\r\nconst { Title } = Typography\r\nconst { Option } = Select\r\nclass CU extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            loading:false,\r\n            solter:0,\r\n            classdata:[\r\n            ],\r\n        }\r\n        this.columns=[\r\n            {\r\n                title: '姓名',\r\n                dataIndex: 'name',\r\n                width: '20%',\r\n            },\r\n            {\r\n                title: '班级',\r\n                dataIndex: 'classname',\r\n                width: '20%',\r\n            },\r\n            {\r\n                title: '课程',\r\n                dataIndex: 'curr',\r\n                width: '20%',\r\n            },\r\n            {\r\n                title: '学院',\r\n                dataIndex: 'college',\r\n                width: '20%',\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'option',\r\n                render: (record) => (<div>\r\n                    <Popconfirm title=\"确定删除吗?\" onConfirm={() => this.handleDelete(record.id)}>\r\n                        <a>删除</a>\r\n                    </Popconfirm>\r\n                    <Divider type=\"vertical\" />\r\n                    <a onClick={() => this.handlEdit(record.id)}>修改</a>\r\n                </div>\r\n                )\r\n                ,\r\n                width: '20%',\r\n            },\r\n        ]\r\n    }\r\n\r\n    fetch = (params) => {\r\n        this.setState({ loading: true });\r\n        Axios({\r\n            url: '/getuserall',\r\n            method: 'get',\r\n            params: {\r\n                'solter':this.state.solter,\r\n                ...params,\r\n            },\r\n            type: 'json',\r\n        }).then(res => {\r\n            const pagination = { ...this.state.pagination };\r\n            pagination.total = res.data.total;\r\n            this.setState({\r\n                loading: false,\r\n                data: res.data.data,\r\n                pagination,\r\n            });\r\n        });\r\n        Axios({\r\n            url:'/getclassall',\r\n            method:'get',\r\n            type:'json'\r\n        }).then(res=>{\r\n            if(res.code){\r\n                this.setState({classdata:res.data.data})\r\n            }\r\n        })\r\n    };\r\n     onChange(value) {\r\n        console.log(`selected ${value}`);\r\n      }\r\n      \r\n       onBlur() {\r\n        console.log('blur');\r\n      }\r\n      \r\n       onFocus() {\r\n        console.log('focus');\r\n      }\r\n      \r\n       onSearch(val) {\r\n        console.log('search:', val);\r\n      }\r\n    render (){\r\n        return <div style={{ padding: 24, background: '#fff',marginTop:32 }}> \r\n        <Row>\r\n        <Col span={24}>\r\n            <Title level={3}>班级学生管理</Title>\r\n        </Col>\r\n        <Col span={12} style={{marginBottom:20}}>\r\n        <Button type=\"primary\" onClick={this.showDrawer}>\r\n          <Icon type=\"plus\" /> 新建\r\n        </Button>\r\n        </Col>\r\n        <span>过滤班级:&nbsp;</span>\r\n        <Select\r\n            showSearch\r\n            style={{ width: 200 }}\r\n            placeholder=\"Select a person\"\r\n            optionFilterProp=\"children\"\r\n            onChange={this.onChange}\r\n            onFocus={this.onFocus}\r\n            onBlur={this.onBlur}\r\n            onSearch={this.onSearch}\r\n            filterOption={(input, option) =>\r\n            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n        >\r\n            {this.state.classdata.map(v=>\r\n                <Option value={v.id}>{v.name}</Option>\r\n            )}\r\n        </Select>\r\n        \r\n        <Table\r\n            columns={this.columns}\r\n            // rowKey={record => record.id}\r\n            dataSource={this.state.data}\r\n            // pagination={this.state.pagination}\r\n            // loading={this.state.loading}\r\n        //   onChange={this.handleTableChange}\r\n        />\r\n        {/* {main} */}\r\n</Row>\r\n</div> \r\n    }\r\n}\r\nexport default CU","import React from 'react';\r\nimport { Table ,Popconfirm,Divider,Row,Col,Typography,Button,Icon,Select} from 'antd';\r\nimport Axios from 'axios'\r\nconst { Title } = Typography\r\nconst { Option } = Select\r\nclass CT extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            loading:false,\r\n            solter:0,\r\n            classdata:[\r\n                {\r\n                    id:'1',\r\n                    name:'1690019'\r\n                }\r\n            ],\r\n            data:[\r\n                {\r\n                    id:'1',\r\n                    name:\"苏航\",\r\n                    course:\"软件工程\",\r\n                    class:\"1690019\"\r\n                }\r\n            ]\r\n        }\r\n        this.columns=[\r\n            {\r\n                title: '姓名',\r\n                dataIndex: 'name',\r\n                width: '20%',\r\n            },\r\n            {\r\n                title: '班级',\r\n                dataIndex: 'class',\r\n                width: '20%',\r\n            },\r\n            {\r\n                title: '课程',\r\n                dataIndex: 'course',\r\n                width: '20%',\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'option',\r\n                render: (record) => (<div>\r\n                    <Popconfirm title=\"确定删除吗?\" onConfirm={() => this.handleDelete(record.id)}>\r\n                        <a>删除</a>\r\n                    </Popconfirm>\r\n                    <Divider type=\"vertical\" />\r\n                    <a onClick={() => this.handlEdit(record.id)}>修改</a>\r\n                </div>\r\n                )\r\n                ,\r\n                width: '20%',\r\n            },\r\n        ]\r\n    }\r\n\r\n    fetch = (params = { \"pageSize\": 10, \"pageNum\": 1}) => {\r\n        this.setState({ loading: true });\r\n        Axios({\r\n            url: '/getuserall',\r\n            method: 'get',\r\n            params: {\r\n                'solter':this.state.solter,\r\n                ...params,\r\n            },\r\n            type: 'json',\r\n        }).then(res => {\r\n            const pagination = { ...this.state.pagination };\r\n            pagination.total = res.data.total;\r\n            this.setState({\r\n                loading: false,\r\n                data: res.data.data,\r\n                pagination,\r\n            });\r\n        });\r\n        Axios({\r\n            url:'/getclassall',\r\n            method:'get',\r\n            type:'json'\r\n        }).then(res=>{\r\n            if(res.code){\r\n                this.setState({classdata:res.data.data})\r\n            }\r\n        })\r\n    };\r\n     onChange(value) {\r\n        console.log(`selected ${value}`);\r\n      }\r\n      \r\n       onBlur() {\r\n        console.log('blur');\r\n      }\r\n      \r\n       onFocus() {\r\n        console.log('focus');\r\n      }\r\n      \r\n       onSearch(val) {\r\n        console.log('search:', val);\r\n      }\r\n    render (){\r\n        return <div style={{ padding: 24, background: '#fff',marginTop:32 }}> \r\n        <Row>\r\n        <Col span={24}>\r\n            <Title level={3}>授课信息管理</Title>\r\n        </Col>\r\n        <Col span={12} style={{marginBottom:20}}>\r\n        <Button type=\"primary\" onClick={this.showDrawer}>\r\n          <Icon type=\"plus\" /> 新建\r\n        </Button>\r\n        </Col>\r\n        <span>过滤班级:&nbsp;</span>\r\n        <Select\r\n            showSearch\r\n            style={{ width: 200 }}\r\n            placeholder=\"Select a person\"\r\n            optionFilterProp=\"children\"\r\n            onChange={this.onChange}\r\n            onFocus={this.onFocus}\r\n            onBlur={this.onBlur}\r\n            onSearch={this.onSearch}\r\n            filterOption={(input, option) =>\r\n            option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n        >\r\n            {this.state.classdata.map(v=>\r\n                <Option value={v.id}>{v.name}</Option>\r\n            )}\r\n        </Select>\r\n        \r\n        <Table\r\n            columns={this.columns}\r\n            // rowKey={record => record.id}\r\n            dataSource={this.state.data}\r\n            // pagination={this.state.pagination}\r\n            // loading={this.state.loading}\r\n        //   onChange={this.handleTableChange}\r\n        />\r\n        {/* {main} */}\r\n</Row>\r\n</div> \r\n    }\r\n}\r\nexport default CT","import React from 'react'\r\nimport { Icon, Form, Radio, Button, Input,InputNumber,message } from 'antd'\r\nimport Axios from 'axios';\r\nlet id = 0;\r\nclass TargetAddFromCompent extends React.Component {\r\n    // constructor(props){\r\n    //     super(props)\r\n    // }\r\n    remove = k => {\r\n        const { form } = this.props;\r\n        // can use data-binding to get\r\n        const keys = form.getFieldValue('keys');\r\n        // We need at least one passenger\r\n        if (keys.length === 1) {\r\n            return;\r\n        }\r\n\r\n        // can use data-binding to set\r\n        form.setFieldsValue({\r\n            keys: keys.filter(key => key !== k),\r\n        });\r\n    };\r\n\r\n    add = () => {\r\n        const { form } = this.props;\r\n        // can use data-binding to get\r\n        const keys = form.getFieldValue('keys');\r\n        const nextKeys = keys.concat(id++);\r\n        // can use data-binding to set\r\n        // important! notify form to detect changes\r\n        form.setFieldsValue({\r\n            keys: nextKeys,\r\n        });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(JSON.stringify(values,null,2))\r\n                let data={}\r\n                data.name=values.indexName\r\n                data.weight=values.weghit\r\n                let op=[];\r\n                for(let i=0;i<values.option.length;i++){ \r\n                    let option={}\r\n                    option.name=values.option[i]\r\n                    option.fraction=values.optionscore[i]\r\n                    // console.log(option)\r\n                    op[i]=option\r\n                    data.id=this.props.pid\r\n                }\r\n                data.option=op\r\n                console.log(JSON.stringify(data,null,2))\r\n                Axios({\r\n                    url:'/insertIndex',\r\n                    method:'post',\r\n                    data:{\r\n                        ...data\r\n                    }\r\n                }).then(v=>{\r\n                        message.success('添加成功')\r\n                })\r\n                // Axios({\r\n                //     url:'/insertIndexF',\r\n                //     method:'post',\r\n                //     params:{\r\n                //       name:values.indexname,\r\n                //       id:this.props.pid\r\n                //     }\r\n                //   }).then(res=>{\r\n                //     if(res.data===1){\r\n                //       message.success('添加成功')\r\n                //     }else{\r\n                //       message.error('添加失败')\r\n                //     }\r\n                //   })\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n              xs: { span: 24 },\r\n              sm: { span:3 },\r\n            },\r\n            wrapperCol: {\r\n              xs: { span: 24 },\r\n              sm: { span: 12},\r\n            },\r\n          };\r\n          const formItemLayoutOnLabel={\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 12,offset:3},\r\n              },\r\n          }\r\n        const { getFieldDecorator, getFieldValue } = this.props.form;\r\n        getFieldDecorator('keys', { initialValue: [] });\r\n        const keys = getFieldValue('keys');\r\n        const formItems = keys.map((k, index) => (\r\n            <div>\r\n            <Form.Item\r\n            {...formItemLayout}\r\n                label={'选项'}\r\n                required={false}\r\n                key={k}\r\n            >\r\n                {getFieldDecorator(`option[${k}]`, {\r\n                    validateTrigger: ['onChange', 'onBlur'],\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            whitespace: true,\r\n                            message: \"请输入选项\",\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"选项名\" style={{ width: '60%', marginRight: 8 }} />)}\r\n                </Form.Item>\r\n                <Form.Item\r\n                {...formItemLayout }\r\n                    label={'权重'}\r\n                    required={false}\r\n                    key={k}\r\n                >\r\n                {getFieldDecorator(`optionscore[${k}]`, {\r\n                    validateTrigger: ['onChange', 'onBlur'],\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            whitespace: true,\r\n                            message: \"请输入权重\",\r\n                        },\r\n                    ],\r\n                })(<InputNumber placeholder='权重' min={0} max={1} style={{ width: '60%', marginRight: 8 }} />)}\r\n                \r\n                {keys.length > 1 ? (\r\n                    <Icon\r\n                        className=\"dynamic-delete-button\"\r\n                        type=\"minus-circle-o\"\r\n                        onClick={() => this.remove(k)}\r\n                    />\r\n                ) : null}\r\n            </Form.Item>\r\n            </div>\r\n        ));\r\n        \r\n        return (<div>\r\n            <Form onSubmit={this.handleSubmit} {...formItemLayout} style={{ marginTop: 20 }}>\r\n            <Form.Item label=\"指标名\">\r\n            {getFieldDecorator('indexName', {\r\n                rules: [\r\n                {\r\n                    required: true,\r\n                    message: '请输入指标名',\r\n                },\r\n                ],\r\n            })(<Input />)}\r\n            </Form.Item>\r\n            <Form.Item label=\"权重\">\r\n                    {getFieldDecorator('weghit', { initialValue: 0.1,rules: [\r\n                {\r\n                    required: true,\r\n                    message: '权重',\r\n                },\r\n                ],})(<InputNumber min={0} max={1} />)}\r\n                </Form.Item>\r\n                {formItems}\r\n                <Form.Item {...formItemLayoutOnLabel}>\r\n                    <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\r\n                        <Icon type=\"plus\" /> 添加选项\r\n                </Button>\r\n                </Form.Item>\r\n                <Form.Item {...formItemLayoutOnLabel}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n                </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            </div>\r\n            )\r\n    }\r\n}\r\nconst TargetAddFrom = Form.create()(TargetAddFromCompent);\r\nexport default TargetAddFrom","import React from 'react'\r\nimport { Form, Button, Input,message } from 'antd'\r\nimport Axios from 'axios';\r\nlet id = 0;\r\nclass TargetAddFromCompent extends React.Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                Axios({\r\n                  url:'/insertIndexF',\r\n                  method:'post',\r\n                  params:{\r\n                    name:values.indexname,\r\n                    id:this.props.pid\r\n                  }\r\n                }).then(res=>{\r\n                  if(res.data===1){\r\n                    message.success('添加成功')\r\n                  }else{\r\n                    message.error('添加失败')\r\n                  }\r\n                })\r\n            }\r\n        });\r\n    };\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n              xs: { span: 24 },\r\n              sm: { span:3 },\r\n            },\r\n            wrapperCol: {\r\n              xs: { span: 24 },\r\n              sm: { span: 12},\r\n            },\r\n          };\r\n          const formItemLayoutOnLabel = {\r\n            wrapperCol: {\r\n              xs: { span: 24 },\r\n              sm: { span: 12,offset:3},\r\n            },\r\n          };\r\n        const { getFieldDecorator} = this.props.form;\r\n        return (<div>\r\n            <Form onSubmit={this.handleSubmit} {...formItemLayout} style={{ marginTop: 20 }}>\r\n            <Form.Item label=\"指标名\">\r\n            {getFieldDecorator('indexName', {rules: [{ required: true, message: '请输入' }],})(<Input />)}\r\n            </Form.Item>\r\n                <Form.Item {...formItemLayoutOnLabel}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n                </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            </div>\r\n            )\r\n    }\r\n}\r\nconst TargetAddFromFater = Form.create()(TargetAddFromCompent);\r\nexport default TargetAddFromFater","import React from 'react'\r\nimport { Radio,Typography} from 'antd';\r\nimport TargetAddFrom from './targetaddfrom';\r\nimport TargetAddFromFater from './targetaddfromfater';\r\nconst { Paragraph } = Typography;\r\nclass TargetNode extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            isshow:'添加父级指标',\r\n        }\r\n    }\r\n    handleChange=(info)=>{\r\n        console.log(JSON.stringify(info,null,2))\r\n        this.setState({isshow:info.target.value})\r\n    }\r\n    render() {\r\n        const change = \r\n        <div>\r\n            <Paragraph strong type=\"warning\">添加的位置为当前选择的指标树节点（默认根节点）</Paragraph>\r\n            <Paragraph>选择添加类型</Paragraph>\r\n            <Radio.Group defaultValue={\"添加父级指标\"} onChange={this.handleChange}>\r\n                <Radio value=\"添加父级指标\">添加父级指标</Radio>\r\n                <Radio value=\"添加题目指标\">添加题目指标</Radio>\r\n            </Radio.Group>\r\n        </div>\r\n        switch (this.state.isshow) {\r\n            case \"添加题目指标\":\r\n                return (<div>\r\n                    {change}\r\n                    <TargetAddFrom pid={this.props.pid}></TargetAddFrom>\r\n                </div>)\r\n                case \"添加父级指标\":\r\n                        return <div>{change}\r\n                         <TargetAddFromFater pid={this.props.pid}></TargetAddFromFater>\r\n                         </div> \r\n            default:\r\n                return <div>{ change }</div>\r\n        }\r\n    }\r\n}\r\nexport default TargetNode","import React from 'react';\r\nimport { Tree, Row, Col, Typography,Spin, Descriptions, Form,Tabs, Radio, Button, Divider, Input, Icon, message } from 'antd';\r\nimport TargetNode from '../from/targetNode';\r\nimport Axios from 'axios';\r\nimport { withRouter } from 'react-router-dom'\r\nconst { Title, Paragraph } = Typography;\r\nconst { TreeNode } = Tree;\r\nconst { TabPane } = Tabs\r\n@withRouter\r\nclass Index extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            onloding:false,\r\n            str: '非常满意',\r\n            thisindex:'1',\r\n            treeData: [//指标树\r\n            ],\r\n            showData:{\r\n                \"name\": \"指标管理\",\r\n                \"weight\": \"0\",\r\n                \"pid\": 0,\r\n                \"id\": 1,\r\n                \"sort\": 1,\r\n                \"option\": [\r\n                  {\r\n                    \"id\": 1,\r\n                    \"name\": \"非常满意\",\r\n                    \"fraction\": 5\r\n                  },\r\n                  {\r\n                    \"id\": 2,\r\n                    \"name\": \"满意\",\r\n                    \"fraction\": 3\r\n                  }\r\n                ]\r\n              }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.onDragEnter()\r\n        this.fetch()\r\n    }\r\n    fetch=()=>{\r\n        Axios({\r\n            url:'/selectIndex',\r\n            method:'post',\r\n            type:'json'\r\n        }).then(res=>{\r\n            if(res.data.status===1){\r\n                this.setState({\r\n                    treeData:res.data.data\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n    handledelete=()=>{\r\n        Axios({\r\n            url:'/deleteIndex',\r\n            method:'post',\r\n            type:'json',\r\n            params:{\r\n                id:this.state.thisindex\r\n            }\r\n        }).then(res=>{\r\n            if(res.data===1){\r\n                message.success('删除成功')\r\n                this.fetch()\r\n                this.onDragEnter()\r\n            }else{\r\n                message.warning('删除失败')\r\n            }\r\n        })\r\n    }\r\n\r\n    onDragEnter = (info=1)=> {\r\n        this.setState({onloding:true})\r\n        Axios({\r\n            url:'/selectIndexOption',\r\n            method:'get',\r\n            type:'json',\r\n            params:{\r\n                id:info\r\n            }\r\n        }).then(res=>{\r\n            this.setState({onloding:false})\r\n                this.setState({\r\n                    showData:res.data,\r\n                    thisindex:info,\r\n                })\r\n        })\r\n    };\r\n    handleonSelect=(info)=>{\r\n        this.onDragEnter(info[0])\r\n    }\r\n    onChange = (str,title) => {\r\n        let  data= Object.assign({}, this.state.showData, { [title]: str })\r\n        \r\n        Axios({\r\n            url:'/updateIndex1',\r\n            method:'post',\r\n            type:'json',\r\n            data:{\r\n                ...data\r\n            }\r\n        }).then(()=>{\r\n            message.success('修改成功')\r\n        })\r\n        this.setState({showData:data})\r\n    };\r\n    onChangeitem = (str,id) => {\r\n        let listdata=[...this.state.showData.option]\r\n        this.setState({\r\n            showData:{option:listdata.map(v=>v.id===id?{...v,name:str}:v),...listdata}\r\n        })\r\n    };\r\n    render() {\r\n        let i=0\r\n        // 生成树节点\r\n        const loop = data =>\r\n            data.map(item => {\r\n                if (item.children && item.children.length) {\r\n                    return (\r\n                        <TreeNode key={item.key} title={item.title}>\r\n                            {loop(item.children)}\r\n                        </TreeNode>\r\n                    );\r\n                }\r\n                return <TreeNode key={item.key} title={item.title} />;\r\n            });\r\n        return (\r\n            <Row >\r\n                <Col span={5} style={{ padding: 24, background: '#fff', marginTop: 32 }}>\r\n                    <Row>\r\n                        <Col span={24}>\r\n                            <Title level={4}>指标树</Title>\r\n                            <Divider />\r\n                            <Tree\r\n                                className=\"draggable-tree\"\r\n                                defaultExpandedKeys={this.state.expandedKeys}\r\n                                onSelect={this.handleonSelect}\r\n                            >\r\n                                {loop(this.state.treeData)}\r\n                            </Tree>\r\n                        </Col>\r\n                        <Col span={24}>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col offset={1} span={18} style={{ padding: 24, background: '#fff', marginTop: 32 }}>\r\n                    <Tabs defaultActiveKey=\"1\">\r\n                        <TabPane tab=\"指标信息\" key=\"1\" >\r\n                        <Spin size=\"large\" spinning={this.state.onloding} >\r\n                        <Row>\r\n                        <Col span={24} >\r\n                            <Button type=\"link \" onClick={this.handledelete} style={{ marginLeft: 5, float: 'right' }}>删除指标</Button>\r\n                            <Descriptions title=\"基本信息\" bordered>\r\n                                <Descriptions.Item label=\"当前指标\"><Paragraph  editable={{ onChange:(str)=>{this.onChange(str,\"name\")}}}>{this.state.showData.name}</Paragraph></Descriptions.Item>\r\n                               <Descriptions.Item  label=\"指标权重\"><Paragraph  editable={{ onChange:(str)=>{this.onChange(str,\"weight\")}}}>{this.state.showData.weight}</Paragraph></Descriptions.Item>\r\n                            </Descriptions>\r\n                            <Descriptions column={1} title=\"选项\" bordered>\r\n                                {   \r\n                                    this.state.showData.option.map(v=>{\r\n                                        i++\r\n                                   return <Descriptions.Item key={v.id}  label={`选项${i}`}><Paragraph  editable={{ onChange:(str)=>{this.onChangeitem(str,v.id)}}}>{v.name}</Paragraph></Descriptions.Item>   \r\n                               })}                        \r\n                            </Descriptions>\r\n                        </Col>\r\n                     </Row>\r\n                     </Spin>\r\n                        </TabPane>\r\n                        <TabPane tab=\"指标管理\" key=\"2\">\r\n                        <Row>\r\n                        <Col span={24}>\r\n                        <TargetNode pid={this.state.showData.id}></TargetNode>\r\n                        </Col>\r\n                    </Row>\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Index","import React from 'react'\r\nimport Axios from 'axios';\r\nimport { Card, Select, Input, Badge, Row, Button,Modal, Col,Popconfirm, message } from 'antd';\r\nimport { withRouter } from 'react-router-dom'\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\nconst { confirm } = Modal;\r\n@withRouter\r\nclass Paper extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            papers: [\r\n            ],\r\n            batch:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.fetch()\r\n    }\r\n    handlopenbatch=info=>{\r\n        this.setState({\r\n            batchopenindex:info\r\n        })\r\n    }\r\n    openbatch=()=>{\r\n        if(typeof(this.state.batchopenindex)!=='undefined'){\r\n            Axios({\r\n                url:'/updateBatchT',\r\n                method:'post',\r\n                params:{\r\n                    id:this.state.batchopenindex\r\n                }\r\n            }).then(res=>{\r\n                if (res.data===1) {\r\n                    message.success('开启成功')\r\n                    this.fetch()\r\n                }else{\r\n                    message.error('开启失败')\r\n                }\r\n            })\r\n        }else{\r\n            message.error('请选择批次')\r\n        }\r\n    }//删除一个试卷\r\n    handleDeletePager=(id)=>{\r\n        Axios({\r\n            url:'/deletePager',\r\n            method:'post',\r\n            params:{\r\n                id:id\r\n            }\r\n        }).then(res=>{\r\n            if (res.code===1) {\r\n                message.success('删除成功')\r\n            }else{\r\n                message.error('删除失败')\r\n            }\r\n        })\r\n    }\r\n    fetch=()=>{\r\n        Axios({\r\n            url:'/getBatch',\r\n            method:'post',\r\n            type:'json',\r\n        }).then(res=>{\r\n            this.setState({\r\n                batch:res.data\r\n            })\r\n        })\r\n        Axios({\r\n            url:'/getquestion',\r\n            method:'post',\r\n            type:'json'\r\n        }).then(res=>{\r\n            this.setState({\r\n                papers:res.data.questionall\r\n            })\r\n        })\r\n    }\r\n    handleSerach=(value)=>{\r\n        Axios({\r\n            url:'/'\r\n        })\r\n    }\r\n    render() {\r\n        return <div>\r\n            <Card title=\"试卷管理\"  extra={<div>\r\n                <Popconfirm\r\n                    title=\"您确定开启吗，这会关闭已开启的批次\"\r\n                    onConfirm={this.openbatch}\r\n                    okText=\"确定\"\r\n                    cancelText=\"取消\"\r\n                >\r\n                <Button type=\"primary\" \r\n                style={{marginRight:5}}\r\n                    >\r\n                    开启批次\r\n                </Button>\r\n                </Popconfirm>\r\n                <Select\r\n                    showSearch\r\n                    style={{ width: 200,marginRight:20 }}\r\n                    placeholder=\"选择批次\"\r\n                    onChange={this.handlopenbatch}\r\n                    filterOption={(input, option) =>\r\n                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                >\r\n                    {this.state.batch.map(v=>\r\n                        <Option key={v.id} value={v.id}>{v.name}</Option>\r\n                    )}\r\n                </Select>\r\n                <Search\r\n                    placeholder=\"输入查询的内容\"\r\n                    onSearch={this.handleSerach}\r\n                    style={{ width: 200 }}\r\n                />\r\n                <Button type=\"primary\" icon={'plus'}\r\n                     onClick={() => this.props.history.push({\r\n                        pathname: '/writePager',\r\n                        state: {\r\n                            id: 0,//试卷id\r\n                        }\r\n                })} style={{ marginLeft: 10 }} >\r\n                    添加\r\n                </Button>\r\n            </div>\r\n            } style={{ padding: 24, background: '#fff', marginTop: 32 }}>\r\n                {this.state.papers.map(item =>\r\n                    <Card key={item.id} style={{ marginTop: 16 }} type=\"inner\" title={item.batch} extra={<div><span>id:&nbsp;{item.id}</span>\r\n                        &nbsp;&nbsp;&nbsp;<span>日期:&nbsp;{item.date}</span>\r\n                        &nbsp;&nbsp;&nbsp;<span>状态:&nbsp;{item.state === 0 ? <Badge color={'green'} text={'进行中'} /> : <Badge color={'red'} text={'未开始'} />}</span></div>}>\r\n                        <Row>\r\n                            <Col span={18}>\r\n                                <span>{item.name}</span>\r\n                            </Col>\r\n                            <Col span={6} >\r\n                                <Button type=\"link\" onClick={() => this.props.history.push({\r\n                                    pathname: '/writePager',\r\n                                    state: {\r\n                                        id: item.id,//试卷id\r\n                                    }\r\n                            })} icon={'edit'} >\r\n                                    修改\r\n                                </Button>\r\n                                <Popconfirm\r\n                                    title=\"确定删除吗，无法恢复哦\"\r\n                                    onConfirm={()=>{\r\n                                        this.handleDeletePager(item.id)\r\n                                    }}\r\n                                    // onCancel={cancel}\r\n                                    okText=\"确定\"\r\n                                    cancelText=\"取消\"\r\n                                >\r\n                                    <Button type=\"link\" icon={'delete'} >\r\n                                    删除\r\n                                    </Button>\r\n                                </Popconfirm>\r\n                                \r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                )}\r\n            </Card>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Paper","import React from 'react'\r\nimport { Card, Input, Badge, Row, Button, Col,Popconfirm, Typography } from 'antd';\r\nimport { withRouter } from 'react-router-dom'\r\nimport Axios from 'axios';\r\nconst { Search } = Input;\r\n@withRouter\r\nclass Pjteacher extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            papers: [\r\n            ]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.fetch()\r\n    }\r\n    fetch=()=>{\r\n        console.log(sessionStorage.getItem('username'))\r\n        Axios({\r\n            url:'/getstudentquestionnaire',\r\n            method:'get',\r\n            params:{\r\n                studentname:sessionStorage.getItem('username')\r\n            }\r\n        }).then(res=>{\r\n            console.log(JSON.stringify(res.data.studentquestion,null,2))\r\n            this.setState({\r\n                papers:res.data.studentquestion\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        return <div>\r\n            <Card title=\"评价老师\" extra={<div>\r\n            </div>\r\n            } style={{ padding: 24, background: '#fff', marginTop: 32 }}>\r\n                {this.state.papers.map(item =>\r\n                    <Card key={item.id} style={{ marginTop: 16 }} type=\"inner\" title={item.name} extra={<div>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <span>老师姓名：&nbsp;{item.tname}</span>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <span>id:&nbsp;{item.tid}</span>\r\n                        &nbsp;&nbsp;&nbsp;<span>状态:&nbsp;{item.state === 1 ? <Badge color={'green'} text={'未评'} /> : <Badge color={'red'} text={'已评'} />}</span></div>}>\r\n                        <Row>\r\n                            <Col span={18}>\r\n                                <span>{item.qname}</span>\r\n                            </Col>\r\n                            <Col span={6} >\r\n                                    {item.state===1?<Button type=\"link\" onClick={() => this.props.history.push({\r\n                                    pathname: '/testpaper',\r\n                                    state: {\r\n                                        id: item.qid,//试卷id\r\n                                        bid:item.bid,//批次id\r\n                                        name:sessionStorage.getItem('username'),\r\n                                        tid:item.tid\r\n                                    }\r\n                            })}  icon={'edit'} >\r\n                                    开始评教\r\n                                    </Button>:\r\n                                    <Typography>已关闭</Typography>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                )}\r\n            </Card>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Pjteacher","import React from 'react'\r\nimport { Tabs,Descriptions,Collapse } from 'antd';\r\nimport {\r\n    G2,\r\n    Chart,\r\n    Geom,\r\n    Axis,\r\n    Tooltip,\r\n    Coord,\r\n    Label,\r\n    Legend,\r\n    View,\r\n    Guide,\r\n    Shape,\r\n    Facet,\r\n    Util\r\n  } from \"bizcharts\";\r\nimport Typography from 'antd/lib/typography/Typography';\r\nconst { TabPane } = Tabs;\r\nconst {Panel}=Collapse;\r\nclass DataPager extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n           allData: [\r\n                {\r\n                  year: \"A\",\r\n                  population: 93\r\n                },\r\n                {\r\n                  year: \"B\",\r\n                  population: 73\r\n                },\r\n                {\r\n                  year: \"C\",\r\n                  population: 66\r\n                },\r\n                {\r\n                  year: \"D\",\r\n                  population:55\r\n                },\r\n              ],\r\n              data : [\r\n                {\r\n                  year: \"非常满意\",\r\n                  sales: 38\r\n                },\r\n                {\r\n                  year: \"满意\",\r\n                  sales: 52\r\n                },\r\n                {\r\n                  year: \"不满意\",\r\n                  sales: 61\r\n                },\r\n                {\r\n                  year: \"非常不满意\",\r\n                  sales: 145\r\n                }\r\n              ],\r\n              cols : {\r\n                sales: {\r\n                  tickInterval: 20\r\n                }\r\n              },\r\n              olddata: [\r\n                {\r\n                  month: \"2019第一学期\",\r\n                  acc: 84.0\r\n                },\r\n                {\r\n                  month: \"2019第二学期\",\r\n                  acc: 14.9\r\n                },\r\n                {\r\n                  month: \"2019第三学期\",\r\n                  acc: 17.0\r\n                },\r\n                {\r\n                  month: \"2019第四学期\",\r\n                  acc: 20.2\r\n                },\r\n                {\r\n                  month: \"2019第五学期\",\r\n                  acc: 55.6\r\n                }, \r\n              ],\r\n              oldcols : {\r\n                month: {\r\n                  alias: \"学期\"\r\n                },\r\n                acc: {\r\n                  alias: \"分数\"\r\n                }\r\n              },\r\n        }\r\n    }\r\n    callback=(key)=> {\r\n      console.log(key);\r\n    }\r\n    \r\n    \r\n    render(){\r\n        return <div\r\n                style={{ padding: 24, background: '#fff', marginTop: 32 }}\r\n        ><Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"本期评教统计\" key=\"1\">\r\n        <Descriptions title=\"本期总概\">\r\n            <Descriptions.Item label=\"姓名\">李郑源</Descriptions.Item>\r\n            <Descriptions.Item label=\"系别\">软件学院</Descriptions.Item>\r\n            <Descriptions.Item label=\"总分数\">94.4</Descriptions.Item>\r\n            <Descriptions.Item label=\"学期\">2019第一学期</Descriptions.Item>\r\n        </Descriptions>\r\n        <Typography style={{fontSize:16,fontWeight:'bold',marginBottom:12,color:'black'}}>详细统计:</Typography>\r\n            <div style={{width:500,height:200}}>\r\n                <Chart height={300} width={500} data={this.state.allData} forceFit>\r\n                <Coord type=\"polar\" innerRadius={0.1} />\r\n                <Tooltip />\r\n                <Legend\r\n                    position=\"right\"\r\n                    offsetY={-30}\r\n                    offsetX={-30}\r\n                />\r\n                <Geom\r\n                    type=\"interval\"\r\n                    color=\"year\"\r\n                    position=\"year*population\"\r\n                    style={{\r\n                    lineWidth: 1,\r\n                    stroke: \"#fff\"\r\n                    }}\r\n                />\r\n                </Chart>\r\n            </div>\r\n        <Typography style={{fontSize:16,fontWeight:'bold',marginBottom:12,color:'black'}}>详细统计:</Typography>\r\n        <Collapse accordion onChange={this.callback}>\r\n          <Panel header=\"上课认真\" key=\"1\">\r\n            <div>\r\n              <Chart height={400} data={this.state.data} scale={this.state.cols} forceFit>\r\n                <Axis name=\"year\" />\r\n                <Axis name=\"sales\" />\r\n                <Tooltip\r\n                  crosshairs={{\r\n                    type: \"y\"\r\n                  }}\r\n                />\r\n                <Geom type=\"interval\" position=\"year*sales\" color='sales' />\r\n              </Chart>\r\n            </div>\r\n          </Panel>\r\n          <Panel header=\"受欢迎程度\" key=\"2\">\r\n            \r\n          </Panel>\r\n          <Panel header=\"This is panel header 3\" key=\"3\">\r\n            \r\n          </Panel>\r\n        </Collapse>\r\n        \r\n        </TabPane>\r\n        <TabPane tab=\"历史统计\" key=\"2\">\r\n        <Descriptions title=\"本期总概\">\r\n            <Descriptions.Item label=\"姓名\">李郑源</Descriptions.Item>\r\n            <Descriptions.Item label=\"系别\">软件学院</Descriptions.Item>\r\n            <Descriptions.Item label=\"入职时间\">2019-6</Descriptions.Item>\r\n        </Descriptions>\r\n        <Typography style={{fontSize:16,fontWeight:'bold',marginBottom:12,color:'black'}}>往期记录:</Typography>\r\n        <div>\r\n        <Chart height={400} data={this.state.olddata} scale={this.state.oldcols} forceFit>\r\n          <Axis\r\n            name=\"month\"\r\n            title={null}\r\n            tickLine={null}\r\n            line={{\r\n              stroke: \"#E6E6E6\"\r\n            }}\r\n          />\r\n          <Axis\r\n            name=\"acc\"\r\n            line={false}\r\n            tickLine={null}\r\n            grid={null}\r\n            title={null}\r\n          />\r\n          <Tooltip />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*acc\"\r\n            size={1}\r\n            color=\"l (270) 0:rgba(255, 146, 255, 1) .5:rgba(100, 268, 255, 1) 1:rgba(215, 0, 255, 1)\"\r\n            shape=\"smooth\"\r\n            style={{\r\n              shadowColor: \"l (270) 0:rgba(21, 146, 255, 0)\",\r\n              shadowBlur: 60,\r\n              shadowOffsetY: 6\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n        </TabPane>\r\n      </Tabs></div>\r\n    }\r\n}\r\nexport default DataPager","import React from 'react'\r\nimport Axios from 'axios';\r\nimport {Card, Select,Input, Col, Row, Table,Button, message} from 'antd'\r\nimport {\r\n    G2,\r\n    Chart,\r\n    Geom,\r\n    Axis,\r\n    Tooltip,\r\n    Coord,\r\n    Label,\r\n    Legend,\r\n    View,\r\n    Guide,\r\n    Shape,\r\n    Facet,\r\n    Util\r\n  } from \"bizcharts\";\r\n  const { Option } = Select;\r\nconst { Search } = Input;\r\nclass Pjresult extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            mapbatch:'',\r\n            batch:[],\r\n            olddata: [\r\n              ],\r\n              oldcols : {\r\n                month: {\r\n                  alias: \"学期\"\r\n                },\r\n                acc: {\r\n                  alias: \"分数\"\r\n                }\r\n              },\r\n            data:[\r\n            ]\r\n        }\r\n    }\r\n    handlemapbatch=()=>{\r\n        if(this.state.mapbatch===''){\r\n        }else{\r\n            let is=parseInt(this.state.mapbatch)\r\n\r\n            Axios({\r\n                url:'/scorepaihang',\r\n                method:'post',\r\n                params:{\r\n                    batch:is\r\n                }\r\n            }).then(res=>{\r\n                let ok=[]\r\n                for(let i=0;i<res.data.data.length;i=i+2){\r\n                    \r\n                    let o={}\r\n                    let s=i+1\r\n                    o.month=res.data.data[i]\r\n                    o.acc=parseInt(res.data.data[s])\r\n                    ok[i/2]=o\r\n                }\r\n                this.setState({\r\n                    olddata:ok\r\n                })\r\n            })\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.fetch()\r\n    }\r\n    fetch=()=>{\r\n        Axios({\r\n            url: '/getBatch',\r\n            method: 'post',\r\n            type: 'json'\r\n        }).then(res => {\r\n            this.setState({\r\n                batch: res.data\r\n            })\r\n        })\r\n        Axios({\r\n            url:'/getpjtj',\r\n            method:'get'\r\n        }).then(res=>{\r\n            this.setState({\r\n                data:res.data.pjtj\r\n            })\r\n        })\r\n    }\r\n    handlesearch=(ms)=>{\r\n        Axios({\r\n            url:\"/getpjtjexa\",\r\n            method:'post',\r\n            params:{\r\n                exa:ms\r\n            }\r\n        }).then(res=>{\r\n            console.log(JSON.stringify(res.data.pjtjexa,null,2))\r\n            this.setState({\r\n                data:res.data.pjtjexa\r\n            })\r\n        })\r\n    }\r\n    render(){\r\n        const columns = [\r\n            {\r\n              title: '教师名',\r\n              dataIndex: 'uname',\r\n              key: 'uname',\r\n            },\r\n            {\r\n              title: '学院',\r\n              dataIndex: 'cname',\r\n              key: 'cname',\r\n            },\r\n            {\r\n                title:'分数',\r\n                dataIndex:'fraction',\r\n                key:'fraction',\r\n                sorter: (a, b) => a.fraction - b.fraction,\r\n            }\r\n        ]\r\n        return <div>\r\n        <div style={{ padding: 24, background: '#fff', marginTop: 32 }}>\r\n            \r\n            <Card bordered={false} title=\"评教统计\">\r\n            <Row>\r\n                <Col span={6}>\r\n            <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"过滤批次\"\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option) =>\r\n                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n            >\r\n                {this.state.batch.map(v => {\r\n                                                    return <Option value={v.name}>{v.name}</Option>\r\n                                                })}\r\n            </Select>\r\n            </Col>\r\n            <Col span={6}>\r\n            <Select\r\n                showSearch\r\n                style={{ width: 200}}\r\n                placeholder=\"过滤类型\"\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option) =>\r\n                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n            >\r\n                <Option value=\"jack\">学生评价</Option>\r\n                <Option value=\"lucy\">同行评价</Option>\r\n                <Option value=\"tom\">自评</Option>\r\n            </Select>\r\n            </Col>\r\n            <Col span={6}>\r\n            <Search onSearch={this.handlesearch} placeholder=\"查询老师\"  enterButton />\r\n            </Col>\r\n            <Col style={{marginTop:20}} span={24}>\r\n            <Table columns={columns} dataSource={this.state.data} />\r\n            </Col>\r\n            </Row>\r\n            </Card>\r\n        </div>\r\n        <div style={{ padding: 24, background: '#fff', marginTop: 32 }}>\r\n            <Card bordered={false} title=\"评教统计\">\r\n                <Select\r\n                    showSearch\r\n                    onChange={v=>this.setState({mapbatch:v})}\r\n                    style={{ width: 200 }}\r\n                    placeholder=\"选择批次\"\r\n                    optionFilterProp=\"children\"\r\n                    filterOption={(input, option) =>\r\n                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                    }\r\n                >\r\n                   {this.state.batch.map(v => {\r\n                                                    return <Option value={v.id}>{v.name}</Option>\r\n                                                })}\r\n                </Select>\r\n                <Button type=\"primary\" \r\n                onClick={this.handlemapbatch}\r\n                style={{marginLeft:5}}\r\n                    >\r\n                    查询\r\n                </Button>\r\n                <Chart height={400} data={this.state.olddata} scale={this.state.oldcols} forceFit>\r\n          <Axis\r\n            name=\"month\"\r\n            title={null}\r\n            tickLine={null}\r\n            line={{\r\n              stroke: \"#E6E6E6\"\r\n            }}\r\n          />\r\n          <Axis\r\n            name=\"acc\"\r\n            line={false}\r\n            tickLine={null}\r\n            grid={null}\r\n            title={null}\r\n          />\r\n          <Tooltip />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*acc\"\r\n            size={1}\r\n            color=\"l (270) 0:rgba(255, 146, 255, 1) .5:rgba(100, 268, 255, 1) 1:rgba(215, 0, 255, 1)\"\r\n            shape=\"smooth\"\r\n            style={{\r\n              shadowColor: \"l (270) 0:rgba(21, 146, 255, 0)\",\r\n              shadowBlur: 60,\r\n              shadowOffsetY: 6\r\n            }}\r\n          />\r\n        </Chart>\r\n            </Card>\r\n        </div>\r\n        </div> \r\n    }\r\n}\r\n\r\nexport default Pjresult","import React from 'react'\r\nimport { Card, Input, Badge, Row, Button, Col,Popconfirm, Typography } from 'antd';\r\nimport { withRouter } from 'react-router-dom'\r\nimport Axios from 'axios';\r\nconst { Search } = Input;\r\n@withRouter\r\nclass Pjmyself extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            papers: [\r\n            ]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.fetch()\r\n    }\r\n    fetch=()=>{\r\n        console.log(sessionStorage.getItem('username'))\r\n        Axios({\r\n            url:'/getteacherzcquestion',\r\n            method:'get',\r\n            params:{\r\n                teachername:sessionStorage.getItem('username')\r\n            }\r\n        }).then(res=>{\r\n            console.log(JSON.stringify(res.data.studentquestion,null,2))\r\n            let query=[res.data.querytionexa]\r\n            this.setState({\r\n                papers:query\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        return <div>\r\n            <Card title=\"自评\" extra={<div>\r\n            </div>\r\n            } style={{ padding: 24, background: '#fff', marginTop: 32 }}>\r\n                {this.state.papers.map(item =>\r\n                    <Card key={item.id} style={{ marginTop: 16 }} type=\"inner\" title={item.name} extra={<div>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <span>老师姓名：&nbsp;{item.tname}</span>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <span>id:&nbsp;{item.tid}</span>\r\n                        &nbsp;&nbsp;&nbsp;<span>状态:&nbsp;{item.state === 1 ? <Badge color={'green'} text={'未评'} /> : <Badge color={'red'} text={'已评'} />}</span></div>}>\r\n                        <Row>\r\n                            <Col span={18}>\r\n                                <span>{item.qname}</span>\r\n                            </Col>\r\n                            <Col span={6} >\r\n                                    {item.state===1?<Button type=\"link\" onClick={() => this.props.history.push({\r\n                                    pathname: '/testpaper',\r\n                                    state: {\r\n                                        id: item.qid,//试卷id\r\n                                        bid:item.bid,//批次id\r\n                                        name:sessionStorage.getItem('username'),\r\n                                        tid:item.tid\r\n                                    }\r\n                            })} icon={'edit'} >\r\n                                    开始评教\r\n                                    </Button>:\r\n                                    <Typography>已关闭</Typography>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                )}\r\n            </Card>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Pjmyself","import React from 'react'\r\nimport { Card, Input, Badge, Row, Button, Col,Popconfirm, Typography } from 'antd';\r\nimport { withRouter } from 'react-router-dom'\r\nimport Axios from 'axios';\r\nconst { Search } = Input;\r\n@withRouter\r\nclass Pjyourself extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            papers: [\r\n                {\r\n                    id: \"19301\",\r\n                    title: \"辅导员评价\",\r\n                    batch: \"2019第二学期\",\r\n                    status: 0,\r\n                    date: '2019-9-27',\r\n                    number: 23,\r\n                },\r\n                {\r\n                    id: \"19302\",\r\n                    title: \"软件工程老师评价\",\r\n                    batch: \"2019第一学期\",\r\n                    status: 1,\r\n                    date: '2019-9-27',\r\n                },\r\n                {\r\n                    id: \"19303\",\r\n                    title: \"数据库老师评价\",\r\n                    batch: \"2019第三学期\",\r\n                    status: 1,\r\n                    date: '2019-9-27',\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.fetch()\r\n    }\r\n    fetch=()=>{\r\n        console.log(sessionStorage.getItem('username'))\r\n        Axios({\r\n            url:'/getteacherquestionnaire',\r\n            method:'get',\r\n            params:{\r\n                teachername:sessionStorage.getItem('username')\r\n            }\r\n        }).then(res=>{\r\n            console.log(JSON.stringify(res.data.studentquestion,null,2))\r\n            this.setState({\r\n                papers:res.data.studentquestion\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        return <div>\r\n            <Card title=\"评价老师\" extra={<div>\r\n            </div>\r\n            } style={{ padding: 24, background: '#fff', marginTop: 32 }}>\r\n                {this.state.papers.map(item =>\r\n                    <Card key={item.id} style={{ marginTop: 16 }} type=\"inner\" title={item.name} extra={<div>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <span>老师姓名：&nbsp;{item.tname}</span>\r\n                        &nbsp;&nbsp;&nbsp;\r\n                        <span>id:&nbsp;{item.tid}</span>\r\n                        &nbsp;&nbsp;&nbsp;<span>状态:&nbsp;{item.state === 1 ? <Badge color={'green'} text={'未评'} /> : <Badge color={'red'} text={'已评'} />}</span></div>}>\r\n                        <Row>\r\n                            <Col span={18}>\r\n                                <span>{item.qname}</span>\r\n                            </Col>\r\n                            <Col span={6} >\r\n                                    {item.state===1?<Button type=\"link\" onClick={() => this.props.history.push({\r\n                                    pathname: '/testpaper',\r\n                                    state: {\r\n                                        id: item.qid,//试卷id\r\n                                        bid:item.bid,//批次id\r\n                                        name:sessionStorage.getItem('username'),\r\n                                        tid:item.tid\r\n                                    }\r\n                            })} icon={'edit'} >\r\n                                    开始评教\r\n                                    </Button>:\r\n                                    <Typography>已关闭</Typography>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                )}\r\n            </Card>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Pjyourself","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Useradmini from '../userManger/userManger'\r\nimport CU from '../layout/Class.user'\r\nimport CT from '../layout/Class.Teacher'\r\nimport Index from '../layout/target';\r\nimport Paper from '../layout/paper';\r\nimport Pjteacher from '../student/pjteacher/pjteacher';\r\nimport DataPager from '../teacher/DataPager';\r\nimport Pjresult from '../layout/pjresult';\r\nimport Pjmyself from '../teacher/pjmyself';\r\nimport Pjyourself from '../teacher/pjyourself';\r\n@connect(state => state.user)\r\n\r\nclass Main extends React.Component{\r\n    render(){\r\n        switch(this.props.onmenu){\r\n            case \"Useradmini\":\r\n                return <Useradmini></Useradmini>\r\n            case \"CU\":\r\n                return <CU></CU>\r\n            case \"CT\":\r\n                return <CT></CT>\r\n            case \"Index\":\r\n                return <Index></Index>\r\n            case \"Paper\":\r\n                return <Paper></Paper>\r\n            case \"Pjteacher\":\r\n                return <Pjteacher></Pjteacher>\r\n            case \"DataPager\":\r\n                return <DataPager></DataPager>\r\n            case \"PjResult\":\r\n                return <Pjresult></Pjresult>\r\n            case \"Pjmyself\":\r\n                return <Pjmyself></Pjmyself>\r\n            case \"Pjyourself\":\r\n                return <Pjyourself></Pjyourself>\r\n            default:\r\n                return <Pjteacher></Pjteacher>\r\n        }\r\n    }\r\n}\r\nexport default Main","\r\nimport React from 'react'\r\nimport { Layout,Avatar,Button,Popover} from 'antd'\r\nimport Menus from '../../component/menu'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport Main from '../main/index'\r\n\r\nconst { Header, Content, Sider,Footer } = Layout;\r\n@connect(state => state.user)\r\n@withRouter\r\nclass IndexLayout extends React.Component{\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n  \r\n  onCollapse = collapsed => {\r\n    this.setState({ collapsed });\r\n  };\r\n  handlLogout=()=>{\r\n      sessionStorage.removeItem('username')\r\n      this.props.history.push('/login')\r\n  }\r\n  render() {\r\n    \r\n    const username = sessionStorage.getItem('username');\r\n    const text = <p>用户信息</p>;\r\n    const content = (\r\n      <div>\r\n        <p>{username}</p>\r\n        <Button block onClick={this.handlLogout} >注销</Button>\r\n      </div>\r\n    );\r\n    return (\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n        <div className=\"logo\" />\r\n        <Menus></Menus>\r\n        </Sider>\r\n        <Layout>\r\n          <Header style={{ background: '#fff', padding: 0 }} >\r\n            <Popover placement=\"bottomRight\" title={text} content={content} trigger=\"hover\">\r\n              <div className=\"userinfo\">\r\n              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />  \r\n              <span>{username}</span>            \r\n              </div>\r\n            </Popover>\r\n          </Header>\r\n          <Content style={{ margin: '0 16px'}}>\r\n              {/* //主界面 */}\r\n              <Main></Main>\r\n          </Content>\r\n          <Footer>\r\n            这是页脚\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IndexLayout","import React from 'react'\r\nimport {Typography,Radio,Input,Divider} from 'antd';\r\n\r\nclass Option extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            value: 1\r\n        }\r\n    }\r\n    onChange = e => {\r\n        console.log('radio checked', e.target.value);\r\n        this.setState({\r\n          value: e.target.value,\r\n        });\r\n      };\r\n    render(){\r\n        const radioStyle = {\r\n            display: 'block',\r\n            height: '30px',\r\n            lineHeight: '30px',\r\n          };\r\n        return (\r\n            <div>\r\n                <Divider />\r\n                <div style={{padding:20}}>\r\n                    <Typography style={{fontSize:16,fontWeight:\"bold\"}}>{this.props.problem.id}.{this.props.problem.title} </Typography>\r\n                    <Radio.Group onChange={(v)=>{this.props.onchange(this.props.problem.id,v)}} size={\"small\"} style={{margin:20}}>\r\n                        {this.props.problem.option.map(v=>{\r\n                            return (<Radio key={v.id} style={radioStyle} value={v.id} key={v.id}>\r\n                                {v.title}\r\n                                </Radio>)\r\n                            })}\r\n                    </Radio.Group>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Option","import React from 'react'\r\nimport Axios from 'axios';\r\nimport { Layout, Menu, Tree, Divider,Button, Typography, Row, Col, Input, Select, message } from 'antd'\r\nimport Option from '../../component/option/index'\r\nconst { Header, Content, Footer } = Layout;\r\nconst { Title, } = Typography;\r\nconst { TreeNode } = Tree;\r\nclass WritPager extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checkedKeys:[],\r\n            treeData: [\r\n            ],\r\n            batch: [],\r\n            subdata: {\r\n                \"title\": \"试卷名\",\r\n                \"batch\": \"第一学期\",\r\n                \"type\":\"自测\",\r\n                \"problem\": [\r\n                    {\r\n                        \"option\": [\r\n                        ]\r\n                    },\r\n                ]\r\n            }\r\n            \r\n        }\r\n    }\r\n        componentDidMount() {\r\n                this.fetch()\r\n        }\r\n        handlesub=()=>{\r\n            Axios({\r\n                url:\"/addquestion\",\r\n                method:'post',\r\n                data:{\r\n                    ...this.state.subdata\r\n                }\r\n            }).then(res=>{\r\n                if(res.data.code===1){\r\n                    message.success('添加成功')\r\n                    this.props.history.push('/index')\r\n                }else{\r\n                    message.error('添加失败')\r\n                }\r\n            })\r\n        }\r\n        fetch = () => {\r\n            if(this.props.history.location.state.id===0){\r\n                Axios({\r\n                    url: '/selectIndex',\r\n                    method: 'post',\r\n                    type: 'json'\r\n                }).then(res => {\r\n                    if (res.data.status === 1) {\r\n                        this.setState({\r\n                            treeData: res.data.data\r\n                        })\r\n                    }\r\n                })\r\n                Axios({\r\n                    url: '/getBatch',\r\n                    method: 'post',\r\n                    type: 'json'\r\n                }).then(res => {\r\n                    this.setState({\r\n                        batch: res.data\r\n                    })\r\n                })\r\n                return\r\n            }\r\n            Axios({\r\n                url: '/selectIndex',\r\n                method: 'post',\r\n                type: 'json'\r\n            }).then(res => {\r\n                if (res.data.status === 1) {\r\n                    this.setState({\r\n                        treeData: res.data.data\r\n                    })\r\n                }\r\n            })\r\n            Axios({\r\n                url: '/getBatch',\r\n                method: 'post',\r\n                type: 'json'\r\n            }).then(res => {\r\n                this.setState({\r\n                    batch: res.data\r\n                })\r\n            })\r\n            Axios({\r\n                url: '/selectOnlineEvaluation',\r\n                method: 'post',\r\n                params: {\r\n                    qid: this.props.history.location.state.id\r\n                }\r\n            }).then(res => {\r\n                this.setState({\r\n                    subdata: res.data.subdata[0]\r\n                })\r\n                //生成受控节点\r\n                let treekeys=[]\r\n                for(let i=0;i<res.data.subdata[0].problem.length;i++){\r\n                    treekeys[i]=res.data.subdata[0].problem[i].id\r\n                }\r\n                console.log(treekeys)\r\n                this.setState({\r\n                    checkedKeys:treekeys\r\n                })\r\n            })\r\n        }\r\n        //添加指标的函数\r\n        onCheck = checkedKeys => {\r\n            \r\n            let resdata =[]\r\n            for(let i=0;i<checkedKeys.length;i++){\r\n                resdata[i]=parseInt(checkedKeys[i])\r\n            }\r\n            console.log(JSON.stringify(resdata,null,2))\r\n            this.setState({ checkedKeys:resdata });\r\n            Axios({\r\n                url:'/previewPage',\r\n                method:'post',\r\n                data:resdata\r\n            }).then(res=>{\r\n                let  data= Object.assign({}, this.state.subData, { problem: res.data.problem })\r\n                console.log(JSON.stringify(res.data.problem,null,2))\r\n                this.setState({\r\n                    subdata: data\r\n                })\r\n            })\r\n          };\r\n        onChange = (evals, value) => {\r\n            let data = Object.assign({}, this.state.subdata, { [evals]: value })\r\n            this.setState({\r\n                subdata: data\r\n            })\r\n        }\r\n        render() {\r\n            // 生成树节点\r\n            const loop = data =>\r\n                data.map(item => {\r\n                    if (item.children && item.children.length) {\r\n                        return (\r\n                            <TreeNode key={item.key} title={item.title}>\r\n                                {loop(item.children)}\r\n                            </TreeNode>\r\n                        );\r\n                    }\r\n                    return <TreeNode key={item.key} title={item.title} />;\r\n                });\r\n            return <Layout>\r\n                <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n                    <div className=\"logo\" />\r\n                    <Menu\r\n                        theme=\"dark\"\r\n                        mode=\"horizontal\"\r\n                        defaultSelectedKeys={['2']}\r\n                        style={{ lineHeight: '64px' }}\r\n                    >\r\n                        <Menu.Item key=\"1\" onClick={this.handlesub} style={{ float: \"right\" }}>提交试卷</Menu.Item>\r\n                    </Menu>\r\n                </Header>\r\n                <Content style={{ padding: '0 50px', marginTop: 100, minHeight: '73vh' }}>\r\n                    <Row>\r\n                        <Col span={5} style={{ padding: 24, overflow: 'hidden', background: '#fff', marginTop: 12 }}>\r\n                            {/* 树 */}\r\n                            <Title level={4}>指标树</Title>\r\n                            <Divider />\r\n                            <Tree\r\n                                checkedKeys={this.state.checkedKeys}\r\n                                checkable\r\n                                className=\"draggable-tree\"\r\n                                defaultExpandedKeys={this.state.expandedKeys}\r\n                                onCheck={this.onCheck}\r\n                            >\r\n                                {loop(this.state.treeData)}\r\n                            </Tree>\r\n                        </Col>\r\n                        <Col span={18} offset={1}>\r\n                            <Row>\r\n                                <Col style={{ padding: 24, overflow: 'hidden', background: '#fff', marginTop: 12 }}>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                        <Button type='link' href=\"/index\">返回上一级</Button></Col>\r\n                                        <Col span={12}>\r\n                                            <span>标题：</span><Input onChange={v => this.onChange('title', v.target.value)} placeholder=\"试卷名\" style={{ width: '70%' }} />\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <span>类型: </span><Select\r\n                                                onChange={(v) => this.onChange('type', v)}\r\n                                                showSearch\r\n                                                style={{ width: '70%' }}\r\n                                                placeholder=\"类型\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                <Select.Option value=\"评价同行\">评价同行</Select.Option>\r\n                                                <Select.Option value=\"评价老师\">评价老师</Select.Option>\r\n                                                <Select.Option value=\"自测\">自测</Select.Option>\r\n                                            </Select>\r\n                                        </Col>\r\n                                        <Col span={12} style={{ marginTop: 20 }}>\r\n                                            <span>批次：</span><Select\r\n                                                onChange={(v) => this.onChange('batch', v)}\r\n                                                showSearch\r\n                                                style={{ width: '70%' }}\r\n                                                placeholder=\"批次：\"\r\n                                                optionFilterProp=\"children\"\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {this.state.batch.map(v => {\r\n                                                    return <Option value={v.name}>{v.name}</Option>\r\n                                                })}\r\n                                            </Select>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col style={{ padding: 24, overflow: 'hidden', background: '#fff', marginTop: 12 }}>\r\n                                    <Title level={4} style={{ textAlign: 'center' }}>{this.state.subdata.title}</Title>\r\n                                    <Row>\r\n                                        <Col span={12} style={{ textAlign: 'center' }}>\r\n                                            <Typography>{this.state.subdata.batch}</Typography>\r\n                                        </Col>\r\n                                        <Col span={12} style={{ textAlign: 'center' }}>\r\n                                            <Typography>{this.state.subdata.type}</Typography>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                {/* 题目 */}\r\n                                <Col style={{ padding: 24, overflow: 'hidden', background: '#fff' }} >\r\n                                    {this.state.subdata.problem.map(v => { return <Option key={v.id} problem={v} ></Option> }\r\n                                    )}\r\n                                    <Divider />\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>在线考试系统 第4组</Footer>\r\n            </Layout>\r\n        }\r\n    }\r\n    export default WritPager","import React from 'react'\r\nimport { Layout, Divider, Button, Row, Col, Typography, message } from 'antd'\r\nimport Option from '../../component/option/index'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Axios from 'axios';\r\nconst { Title } = Typography\r\nconst { Content, Footer } = Layout\r\nclass TestPager extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            subdata: {\r\n\r\n                \"id\": 1,\r\n                \"title\": \"自测问卷\",\r\n                \"batch\": \"大一上学期\",\r\n                \"problem\": [\r\n                    {\r\n                        \"id\": 1,\r\n                        \"title\": \"1\",\r\n                        \"option\": [\r\n                            {\r\n                                \"id\": 1,\r\n                                \"title\": \"非常满意\"\r\n                            },\r\n                            {\r\n                                \"id\": 2,\r\n                                \"title\": \"满意\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": 2,\r\n                        \"title\": \"同行\",\r\n                        \"option\": [\r\n                            {\r\n                                \"id\": 1,\r\n                                \"title\": \"非常满意\"\r\n                            },\r\n                            {\r\n                                \"id\": 2,\r\n                                \"title\": \"满意\"\r\n                            },\r\n                            {\r\n                                \"id\": 3,\r\n                                \"title\": \"比较满意\"\r\n                            },\r\n                            {\r\n                                \"id\": 4,\r\n                                \"title\": \"一般\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": 3,\r\n                        \"title\": \"自评\",\r\n                        \"option\": [\r\n                            {\r\n                                \"id\": 1,\r\n                                \"title\": \"非常满意\"\r\n                            },\r\n                            {\r\n                                \"id\": 3,\r\n                                \"title\": \"比较满意\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": 4,\r\n                        \"title\": \"领导\",\r\n                        \"option\": [\r\n                            {\r\n                                \"id\": 3,\r\n                                \"title\": \"比较满意\"\r\n                            },\r\n                            {\r\n                                \"id\": 4,\r\n                                \"title\": \"一般\"\r\n                            }\r\n                        ]\r\n\r\n                    }\r\n                ]}\r\n                \r\n            }\r\n    \r\n}\r\n    onchange=(id,value)=>{\r\n        let data=this.state.subdata\r\n      let okpro =  data.problem.map(v=>{\r\n            if(v.id===id){\r\n                v.click=value.target.value\r\n                return v\r\n            }\r\n            return v\r\n        })\r\n        data.problem=okpro\r\n        // let data = Object.assign({}, this.state.subdata, { [name]: value })\r\n        this.setState({\r\n            subdata: data\r\n        })\r\n    }\r\n    handleClick=()=>{\r\n        let subok=true\r\n        this.state.subdata.problem.map(v=>{\r\n            if(typeof(v.click)==='undefined'){\r\n                subok=false\r\n            }\r\n        })\r\n        if(subok){\r\n            console.log(JSON.stringify(this.state.subdata,null,2))\r\n            Axios({\r\n                url:'/insertGeneral',\r\n                method:'post',\r\n                data:{\r\n                    ...this.state.subdata\r\n                }\r\n            }).then(res=>{\r\n                if(res.data.test===1){\r\n                    message.success('提交成功')\r\n                    this.props.history.push('/index')\r\n                }else{\r\n                    message.error('提交失败')\r\n                }\r\n            })\r\n        }else{\r\n            message.error('没做完哦')\r\n        }\r\n    }\r\n    componentDidMount() {\r\n                Axios({\r\n                    url: '/selectOnlineEvaluation',\r\n                    method: 'post',\r\n                    params: {\r\n                        qid: this.props.history.location.state.id\r\n                    }\r\n                }).then(res => {\r\n                    let data=res.data.subdata[0]\r\n                    data.bid=this.props.history.location.state.id\r\n                    data.name=this.props.history.location.state.name\r\n                    data.tid=this.props.history.location.state.tid\r\n                    this.setState({\r\n                        subdata:data\r\n                    })\r\n                })\r\n            }\r\n    render() {\r\n                return <Layout className=\"layout\">\r\n                    <Content style={{ padding: '0 50px', marginTop: '10vh' }}>\r\n                        <div style={{ background: '#fff', padding: 20, minHeight: '90vh' }}>\r\n                            <Button type='link' href=\"/index\">返回上一级</Button>\r\n                            <Divider />\r\n                            <Title level={4} style={{ textAlign: 'center' }}>{this.state.subdata.title}</Title>\r\n                            <Row>\r\n                                <Col span={12} style={{ textAlign: 'center' }}>\r\n                                    <Typography>{this.state.subdata.batch}</Typography>\r\n                                </Col>\r\n                                <Col span={12} style={{ textAlign: 'center' }}>\r\n                                    <Typography>{this.state.subdata.college}</Typography>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* 题目 */}\r\n                            <Col style={{ padding: 24, overflow: 'hidden', background: '#fff' }} >\r\n                                {this.state.subdata.problem.map(v => { return <Option key={v.id} onchange={this.onchange} problem={v} ></Option> }\r\n                                )}\r\n                                <Divider />\r\n                            </Col>\r\n                            <Button type='primary' onClick={this.handleClick} style={{ left: '47%' }}>提交</Button>\r\n                        </div>\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>在线评教</Footer>\r\n                </Layout>\r\n            }\r\n        }\r\n        export default TestPager","import React from 'react';\r\nimport {Route} from 'react-router-dom'\r\n\r\nimport Login from './container/login'\r\nimport Game from './container/test'\r\nimport IndexLayout from './container/layout'\r\nimport WritPager from './container/Pager/writePaper'\r\nimport TestPager from './container/Pager/TestpPager'\r\n\r\n// 业务主入口\r\n// 路由的匹配\r\nclass App extends React.Component{\r\n  render(){\r\n    return (\r\n      <div>\r\n      <Route path=\"/Login\" component={Login}></Route>\r\n      <Route path=\"/Demo\" component={Game}></Route>\r\n      <Route path='/Index' component={IndexLayout}></Route>\r\n      <Route path='/writePager' component={WritPager}></Route>\r\n      <Route path='/testpaper' component={TestPager}></Route>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport thunk from 'redux-thunk'\nimport {Provider} from 'react-redux'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport reducers from './reducer'\nimport './config'\nimport App from './App'\nimport './style.less'\nimport 'antd/dist/antd.css';\n\nconst store = createStore(reducers, compose(\n    applyMiddleware(thunk),\n    window.devToolsExtenion ? window.devToolsExtenion() : f=> f\n))\n\nReactDOM.render((\n    <Provider store={store}>\n        <BrowserRouter>\n        <App></App>\n        </BrowserRouter>\n    </Provider>\n),document.getElementById('root'));\n\n"],"sourceRoot":""}